{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account-info/account-info.component.ts","webpack:///src/app/account-info/account-info.component.html","webpack:///src/app/add-book/add-book.component.ts","webpack:///src/app/add-book/add-book.component.html","webpack:///src/app/all-books/all-books.component.ts","webpack:///src/app/all-books/all-books.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/manage-books/manage-books.component.ts","webpack:///src/app/manage-books/manage-books.component.html","webpack:///src/app/manage-books/update-book/update-book.component.ts","webpack:///src/app/manage-books/update-book/update-book.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/models/ShareInfoClass.ts","webpack:///src/app/services/ShareInfoService.ts","webpack:///src/app/services/books/books.service.ts","webpack:///src/app/services/cart/cart.service.ts","webpack:///src/app/services/users.service.ts","webpack:///src/app/signin/signin.component.ts","webpack:///src/app/signin/signin.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountInfoComponent","userService","router","currentuser","localStorage","getItem","GetUserInfo","subscribe","response","console","log","firstname","lastname","email","tempfname","templname","alert","UpdateInfo","result","oldpassword","newpassword","passw","match","UpdatePassword","res","sessionStorage","removeItem","navigate","UpdateUserInfo","selector","templateUrl","styleUrls","AddBookComponent","booksService","formData","FormData","userId","toString","allImages","img","append","isbn","title","authors","price","quantity","addBook","event","target","files","length","submitBook","onFileSelect","AllBooksComponent","cartService","booksList","Array","getBooks","x","images","urls","split","imageArray","selectedIndex","cartQuantity","push","bookId","quan","addToCart","forEach","book","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","CartComponent","cartList","deletedItemsList","getCart","itemId","deleteFromCart","location","reload","newQuantity","value","updateCart","HomeComponent","ManageBooksComponent","retVal","confirm","deleteBook","imageUrl","splice","updatedImageString","join","updateBooksImages","image","undefined","addImageToBook","UpdateBookComponent","route","bookService","snapshot","params","getSpecificBook","publication_date","updateBook","MenuComponent","shareInfoService","loggedIn","change","ShareInfoClass","ShareInfoService","providedIn","BooksService","http","requestUrl","window","hostname","token","bearer","httpOptions","headers","post","get","put","CartService","body","UsersService","password","SigninComponent","shareInfoClass","SignIn","emit","setItem","user","UserLogin","SignupComponent","pattern","rePassword","SignUp","status","register","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,oB;AAYX,oCAAoBC,WAApB,EAAuDC,MAAvD,EAAuE;AAAA;;AAAnD,aAAAD,WAAA,GAAAA,WAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;mCAElE;AAAA;;AACN,cAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;AACA,eAAKJ,WAAL,CAAiBK,WAAjB,CAA6BH,WAA7B,EAA0CI,SAA1C,CAAoD,UAAAC,QAAQ,EAAI;AAC9DC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,iBAAI,CAACG,SAAL,GAAiBH,QAAQ,CAAC,CAAD,CAAR,CAAYG,SAA7B;AACA,iBAAI,CAACC,QAAL,GAAgBJ,QAAQ,CAAC,CAAD,CAAR,CAAYI,QAA5B;AACA,iBAAI,CAACC,KAAL,GAAaL,QAAQ,CAAC,CAAD,CAAR,CAAYK,KAAzB,CAJ8D,CAM9D;;AACA,iBAAI,CAACC,SAAL,GAAiB,KAAI,CAACH,SAAtB;AACA,iBAAI,CAACI,SAAL,GAAiB,KAAI,CAACH,QAAtB;AAED,WAVD;AAYD;;;yCAEa;AACZ,cAAI,KAAKE,SAAL,KAAmB,EAAvB,EAA2B;AACzBE,iBAAK,CAAC,wBAAD,CAAL;AACA;AACD,WAHD,MAGO,IAAI,KAAKD,SAAL,KAAmB,EAAvB,EAA2B;AAChCC,iBAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAED,eAAKf,WAAL,CAAiBgB,UAAjB,CAA4B,KAAKJ,KAAjC,EAAwC,KAAKC,SAA7C,EAAwD,KAAKC,SAA7D,EAAwER,SAAxE,CAAkF,UAAAW,MAAM,EAAI;AAC1FT,mBAAO,CAACC,GAAR,CAAYQ,MAAZ;AACD,WAFD;AAID;;;yCAEa;AACZ,cAAI,KAAKC,WAAL,KAAqB,EAAzB,EAA4B;AAC1BH,iBAAK,CAAC,2BAAD,CAAL;AACA;AACD,WAHD,MAIK,IAAI,KAAKI,WAAL,KAAqB,EAAzB,EAA6B;AAEhCJ,iBAAK,CAAC,2BAAD,CAAL;AACA;AACD;;AACD,cAAIK,KAAK,GAAG,yCAAZ;;AACA,cAAG,CAAC,KAAKD,WAAL,CAAiBE,KAAjB,CAAuBD,KAAvB,CAAJ,EACA;AACEL,iBAAK,CAAC,+BAAD,CAAL;AACA,mBAAO,IAAP;AACD;;AAEDP,iBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKS,WAA5B,EAAyC,iBAAzC,EAA4D,KAAKC,WAAjE;AAEA,eAAKnB,WAAL,CAAiBsB,cAAjB,CAAgC,KAAKV,KAArC,EAA4C,KAAKM,WAAjD,EAA6D,KAAKC,WAAlE,EAA+Eb,SAA/E,CAAyF,UAACiB,GAAD,EAAQ;AAE/FR,iBAAK,CAACQ,GAAD,CAAL;AACD,WAHD;AAMD;;;iCAEQ;AAEP;AACAC,wBAAc,CAACC,UAAf,CAA0B,MAA1B;AACAtB,sBAAY,CAACsB,UAAb,CAAwB,MAAxB;AACAtB,sBAAY,CAACsB,UAAb,CAAwB,OAAxB;AACAtB,sBAAY,CAACsB,UAAb,CAAwB,QAAxB;AACA,eAAKxB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,GAAD,CAArB,EAPO,CAQP;AAED;;;;;;;uBAlFU3B,oB,EAAoB,4I,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,+vB;AAAA;AAAA;ACTjC;;AACE;;AACE;;AAAI;;AAAY;;AAAK;;AACrB;;AAAI;;AAAwB;;AAAK;;AACjC;;AAAI;;AAAsB;;AAAK;;AAC/B;;AAAI;;AAAgB;;AAAK;;AAIzB;;AAEM;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AAEF;;AAAM;;AAGN;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AAAM;;AAGV;;AACE;;AAAuB;AAAA,mBAAS,IAAA4B,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAW;;AAC/D;;AAAM;;AAEJ;;AACA;;AAEI;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AAEF;;AAAM;;AAGN;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AAAM;;AAGV;;AACE;;AAAuB;AAAA,mBAAS,IAAAL,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAe;;AACnE;;AAAM;;AAEJ;;AACV;;AAEA;;AAOA;;;;AAnDQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAOW;;AAAA;;AAMA;;AAAA;;AAYE;;AAAA;;AAMA;;AAAA;;;;;;;;;sED3BRvB,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT6B,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,gB;AAUX,gCAAoBC,YAApB,EAAwD/B,MAAxD,EAAuE;AAAA;;AAAnD,aAAA+B,YAAA,GAAAA,YAAA;AAAoC,aAAA/B,MAAA,GAAAA,MAAA;AAAkB;;;;mCAElE,CACP,C,CAGD;;;;qCACU;AAAA;;AACR,cAAMgC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,cAAMC,MAAM,GAAGhC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BgC,QAA/B,EAAf;;AAFQ,qDAIO,KAAKC,SAJZ;AAAA;;AAAA;AAIR,gEAA8B;AAAA,kBAAtBC,GAAsB;AAC5BL,sBAAQ,CAACM,MAAT,CAAgB,OAAhB,EAAyBD,GAAzB;AACD;AANO;AAAA;AAAA;AAAA;AAAA;;AAQRL,kBAAQ,CAACM,MAAT,CAAgB,QAAhB,EAA0BJ,MAA1B;AACAF,kBAAQ,CAACM,MAAT,CAAgB,MAAhB,EAAwB,KAAKC,IAA7B;AACAP,kBAAQ,CAACM,MAAT,CAAgB,OAAhB,EAAyB,KAAKE,KAA9B;AACAR,kBAAQ,CAACM,MAAT,CAAgB,SAAhB,EAA2B,KAAKG,OAAhC;AACAT,kBAAQ,CAACM,MAAT,CAAgB,OAAhB,EAAyB,KAAKI,KAAL,CAAWP,QAAX,EAAzB;AACAH,kBAAQ,CAACM,MAAT,CAAgB,UAAhB,EAA4B,KAAKK,QAAL,CAAcR,QAAd,EAA5B;AAEA5B,iBAAO,CAACC,GAAR,CAAYwB,QAAZ;AAEA,eAAKD,YAAL,CAAkBa,OAAlB,CAA0BZ,QAA1B,EACG3B,SADH,CACa,UAAAC,QAAQ,EAAI;AACrBQ,iBAAK,CAAC,YAAD,CAAL;AACAP,mBAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,kBAAI,CAACN,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,eAAD,CAArB;AAED,WANH;AAQA;;;;;;AAOD;;;qCAEYoB,K,EAAK;AAChBtC,iBAAO,CAACC,GAAR,CAAYqC,KAAK,CAACC,MAAN,CAAaC,KAAzB;;AACA,cAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC;AACA;AACA;AACA,iBAAKZ,SAAL,GAAiBS,KAAK,CAACC,MAAN,CAAaC,KAA9B;AACD;AACF;;;;;;;uBA3DUjB,gB,EAAgB,2I,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,e;AAAA,a;AAAA,qgC;AAAA;AAAA;ACX7B;;AACI;;AAAI;;AAAc;;AAClB;;AAAM;AAAA,mBAAY,IAAAmB,UAAA,EAAZ;AAAwB,WAAxB;;AACF;;AACI;;AAAkB;;AAAI;;AACtB;;AAEO;AAAA;AAAA;;AAFP;;AAGF;;AAAM;;AAEN;;AACE;;AAAmB;;AAAK;;AACxB;;AAEO;AAAA;AAAA;;AAFP;;AAGF;;AAAM;;AAEN;;AACE;;AAAqB;;AAAO;;AAC5B;;AAEO;AAAA;AAAA;;AAFP;;AAGF;;AAAM;;AAEN;;AACE;;AAAmB;;AAAK;;AACxB;;AAEO;AAAA;AAAA;;AAFP;;AAGF;;AAAM;;AAEN;;AACE;;AAAsB;;AAAQ;;AAC9B;;AACO;AAAA;AAAA;;AADP;;AAEF;;AAAM;;AAKN;;AAA6F;AAAA,mBAAU,IAAAC,YAAA,QAAV;AAA8B,WAA9B;;AAA7F;;AAA+H;;AAE/H;;AAAgF;;AAAM;;AAE5F;;AACJ;;;;;;AAtCmB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAMA;;AAAA;;AAQqC;;AAAA;;;;;;;;;sED/B3CpB,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTH,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACyBgB;;AACI;;AAAW;;AAAQ;;AACnB;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AAAkB;;AAAC;;AACnB;;AAAkB;;AAAC;;AACnB;;AAAkB;;AAAC;;AACnB;;AAAkB;;AAAC;;AACnB;;AAAkB;;AAAC;;AACrB;;AACA;;AAAS;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6D;;AAAW;;AACrF;;;;;;AARY;;AAAA;;;;;;;;AAxBhB;;AACI;;AAEE;;AAAgB;;AAAc;;AAC9B;;AAAmB;;AAA2B;;AAChD;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACA;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACE;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAsB;;AAE9B;;AACA;;AAWF;;;;;;;;AA9BoB;;AAAA;;AACG;;AAAA;;AAIZ;;AAAA;;AAUD;;AAAA;;AACA;;AAAA;;AAGU;;AAAA;;;;;;AAvB1B;;AACI;;AAkCJ;;;;;;AAlCc;;AAAA;;;;QDMTsB,iB;AAMX,iCAAoBpB,YAApB,EAAuDqB,WAAvD,EAAgF;AAAA;;AAA5D,aAAArB,YAAA,GAAAA,YAAA;AAAmC,aAAAqB,WAAA,GAAAA,WAAA;AAJvD,aAAAC,SAAA,GAAYC,KAAK,EAAjB;AAImF;;;;mCAE3E;AAAA;;AACN,eAAKpB,MAAL,GAAchC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BgC,QAA/B,EAAd,CADM,CAEN;;AACA,eAAKJ,YAAL,CAAkBwB,QAAlB,GAA6BlD,SAA7B,CAAuC,UAAAW,MAAM,EAAI;AAC/CT,mBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCQ,MAAtC;;AACA,iBAAK,IAAIwC,CAAT,IAAcxC,MAAd,EAAsB;AACpBT,qBAAO,CAACC,GAAR,CAAYQ,MAAM,CAACwC,CAAD,CAAN,CAAUC,MAAtB;AACA,kBAAIC,IAAI,GAAG1C,MAAM,CAACwC,CAAD,CAAN,CAAUC,MAAV,CAAiBE,KAAjB,CAAuB,GAAvB,CAAX,CAFoB,CAGpB;;AACApD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;AAEA1C,oBAAM,CAACwC,CAAD,CAAN,CAAUI,UAAV,GAAuBF,IAAvB;AACA1C,oBAAM,CAACwC,CAAD,CAAN,CAAUK,aAAV,GAA0B,CAA1B;AACA7C,oBAAM,CAACwC,CAAD,CAAN,CAAUM,YAAV,GAAyB,CAAzB;;AAEA,oBAAI,CAACT,SAAL,CAAeU,IAAf,CAAoB/C,MAAM,CAACwC,CAAD,CAA1B;;AACAjD,qBAAO,CAACC,GAAR,CAAYQ,MAAM,CAACwC,CAAD,CAAN,CAAUM,YAAtB,EAAqC,OAAO9C,MAAM,CAACwC,CAAD,CAAlD;AACD;AACF,WAfD;AAgBD;;;kCAESQ,M,EAAeC,I,EAAW;AAClCnD,eAAK,sBAAemD,IAAf,6BAAsCD,MAAtC,EAAL;AACA,eAAKZ,WAAL,CAAiBc,SAAjB,CAA2BF,MAA3B,EAAmCC,IAAnC,EAAyC5D,SAAzC,CAAmD,UAAAW,MAAM,EAAI;AAC3DT,mBAAO,CAACC,GAAR,CAAYQ,MAAZ;AACD,WAFD;AAGD;;;kCAESnB,E,EAAE;AACV,eAAKwD,SAAL,CAAec,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,gBAAGA,IAAI,CAACvE,EAAL,IAAWA,EAAd,EAAkB;AAChB,kBAAGuE,IAAI,CAACP,aAAL,IAAsBO,IAAI,CAACR,UAAL,CAAgBZ,MAAhB,GAAuB,CAAhD,EACA;AACEoB,oBAAI,CAACP,aAAL,GAAqBO,IAAI,CAACP,aAAL,GAAqB,CAA1C;AACD;AACF;AACF,WAPD;AASD;;;kCAEShE,E,EAAE;AACV,eAAKwD,SAAL,CAAec,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,gBAAGA,IAAI,CAACvE,EAAL,IAAWA,EAAd,EAAkB;AAChB,kBAAGuE,IAAI,CAACP,aAAL,IAAsB,CAAzB,EACA;AACEO,oBAAI,CAACP,aAAL,GAAqBO,IAAI,CAACP,aAAL,GAAqB,CAA1C;AACD;AACF;AACF,WAPD;AASD;;;;;;;uBA1DUV,iB,EAAiB,2I,EAAA,wI;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,8Y;AAAA;AAAA;ACT9B;;AACI;;AACI;;AAoCJ;;AAEJ;;;;AAtCY;;AAAA;;;;;;;;;sEDOCA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTxB,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMwC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAG,QAAT;AAAmBC,eAAS,EAAE;AAA9B,KADqB,EAErB;AAAED,UAAI,EAAG,QAAT;AAAmBC,eAAS,EAAE;AAA9B,KAFqB,EAGrB;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAHqB,EAIrB;AAAED,UAAI,EAAE,SAAR;AAAmBC,eAAS,EAAE;AAA9B,KAJqB,EAKrB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KALqB,EAMrB;AAAED,UAAI,EAAE,sBAAR;AAAgCC,eAAS,EAAE,mGAA3C;AAAgEC,eAAS,EAAC;AAA1E,KANqB,EAOrB;AAAEF,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAPqB,EAQrB;AAAED,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE,0FAAnC;AAAyDC,eAAS,EAAE;AAApE,KARqB,EASrB;AAAEF,UAAI,EAAG,WAAT;AAAsBC,eAAS,EAAE,6EAAjC;AAAmDC,eAAS,EAAE;AAA9D,KATqB,CAAvB;;QAiBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBI,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERzE,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC5B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagF,Y,GALb;AAAA;;AAME,WAAApC,KAAA,GAAQ,IAAR;AACD,K;;;uBAFYoC,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AACA;;;;;;;;;sEDMaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTjD,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,wC,CAeA;;;AAqBA,QAAMwC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAG,QAAT;AAAmBC,eAAS,EAAE;AAA9B,KADqB,EAErB;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KAFqB,EAGrB;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAHqB,CAAvB;;QA0CaM,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAjBJ,CACP,uEADO,EAEP,oEAFO,EAGP,6DAAaH,OAAb,CAAqBL,MAArB,CAHO,EAIP,0DAJO,EAKP,qEALO,EAMP,6FANO,EAOP,yEAPO,EAQP,2EARO,EASP,yEATO,EAUP,qEAVO,EAWP,qEAXO,EAYP,iFAZO,EAaP,qEAbO,EAcP,yEAdO,EAeP,qEAfO,CAiBI;;;;0HAGFQ,S,EAAS;AAAA,uBAjClB,2DAiCkB,EAhClB,wEAgCkB,EA/BlB,wEA+BkB,EA9BlB,kEA8BkB,EA7BlB,mEA6BkB,EA5BlB,0FA4BkB,EA3BlB,8EA2BkB,EA1BlB,iFA0BkB,EAzBlB,0FAyBkB,EAxBlB,oGAwBkB,EAvBlB,mEAuBkB;AAvBL,kBAIb,uEAJa,EAKb,oEALa,EAKK,4DALL,EAOb,0DAPa,EAQb,qEARa,EASb,6FATa,EAUb,yEAVa,EAWb,2EAXa,EAYb,yEAZa,EAab,qEAba,EAcb,qEAda,EAeb,iFAfa,EAgBb,qEAhBa,EAiBb,yEAjBa,EAkBb,qEAlBa;AAuBK,O;AALL,K;;;;;sEAKJA,S,EAAS;cAnCrB,sDAmCqB;eAnCZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,wEAHY,EAIZ,kEAJY,EAKZ,mEALY,EAMZ,0FANY,EAOZ,8EAPY,EAQZ,iFARY,EASZ,0FATY,EAUZ,oGAVY,EAWZ,mEAXY,CADN;AAeRH,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,6DAAaD,OAAb,CAAqBL,MAArB,CAHO,EAIP,0DAJO,EAKP,qEALO,EAMP,6FANO,EAOP,yEAPO,EAQP,2EARO,EASP,yEATO,EAUP,qEAVO,EAWP,qEAXO,EAYP,iFAZO,EAaP,qEAbO,EAcP,yEAdO,EAeP,qEAfO,CAfD;AAgCRU,mBAAS,EAAE,EAhCH;AAiCRC,mBAAS,EAAE,CAAC,2DAAD;AAjCH,S;AAmCY,Q;;;;;;;;;;;;;;;;;;AC9EtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGY;;AACI;;AACI;;AACE;;AAAiB;;AAA6C;;AAChE;;AACA;;AACI;;AAAoB;;AAAQ;;AAChC;;AACF;;AACN;;;;;;AAN2B;;AAAA;;;;;;;;AAa3B;;AACI;;AACE;;AACA;;AAAgB;;AAAmB;;AACrC;;AACA;;AAEI;;AACI;;AAAsB;;AAAQ;;AAC9B;;AAAO;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAoD,eAApD,EAAoD;AAAA;;AAAA;;AAAA;AAAA,SAApD;;AAAP;;AAEF;;AAEF;;AAAI;;AAA2B;;AAC/B;;AAAK;;AAAoB;;AAC7B;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4C;;AAAO;;AAC/D;;AACF;;;;;;AAhBoB;;AAAA;;AAOH;;AAAA;;AAGP;;AAAA;;AACC;;AAAA;;;;;;AAOT;;AACI;;AACI;;AACJ;;AACJ;;;;;;AA1BR;;AACI;;AAoBE;;AAON;;;;;;;;AA3Bc;;AAAA,qGAAiD,UAAjD,EAAiD,GAAjD;;;;QDRTC,a;AAIX,6BAAoB7B,WAApB,EAAsDpD,MAAtD,EAAqE;AAAA;;AAAjD,aAAAoD,WAAA,GAAAA,WAAA;AAAkC,aAAApD,MAAA,GAAAA,MAAA;AAHtD,aAAAkF,QAAA,GAAW,EAAX;AACA,aAAAC,gBAAA,GAAmB7B,KAAK,EAAxB;AAEwE;;;;mCAEhE;AAAA;;AACN,eAAKF,WAAL,CAAiBgC,OAAjB,GAA2B/E,SAA3B,CAAqC,UAAAW,MAAM,EAAI;AAE7C,iBAAK,IAAIwC,CAAT,IAAcxC,MAAd,EAAsB;AACpB,oBAAI,CAACkE,QAAL,CAAcnB,IAAd,CAAmB/C,MAAM,CAACwC,CAAD,CAAzB;;AACAjD,qBAAO,CAACC,GAAR,CAAYQ,MAAM,CAACwC,CAAD,CAAlB;AACD;;AACDjD,mBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,MAAI,CAAC0E,QAAzC;AACD,WAPD,EADM,CAUN;AACD;;;mCAEUG,M,EAAc;AACvB;AACA,eAAKjC,WAAL,CAAiBkC,cAAjB,CAAgCD,MAAhC,EAAwChF,SAAxC,CAAkD,UAAAW,MAAM,EAAI;AAC1DT,mBAAO,CAACC,GAAR,CAAYQ,MAAZ;AACAuE,oBAAQ,CAACC,MAAT;AACD,WAHD;AAID;;;mCAEU3C,K,EAAOwC,M,EAAerB,M,EAAc;AAC7C,cAAIyB,WAAW,GAAG5C,KAAK,CAACC,MAAN,CAAa4C,KAA/B;AACA5E,eAAK,wBAAiB2E,WAAjB,EAAL;AACA,eAAKrC,WAAL,CAAiBuC,UAAjB,CAA4BN,MAA5B,EAAoCrB,MAApC,EAA4CyB,WAA5C,EAAyDpF,SAAzD,CAAmE,UAAAW,MAAM,EAAI;AAC3ET,mBAAO,CAACC,GAAR,CAAYQ,MAAZ;AACAuE,oBAAQ,CAACC,MAAT,GAF2E,CAG3E;AACD,WAJD;AAMD;;;;;;;uBApCUP,a,EAAa,wI,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,mc;AAAA;AAAA;ACX1B;;AACI;;AACI;;AACI;;AAUJ;;AACJ;;AAGA;;AACI;;AA6BJ;;AAEJ;;;;AA9CgB;;AAAA;;AAeJ;;AAAA;;;;;;;;;sEDPCA,a,EAAa;cAPzB,uDAOyB;eAPf;AACTtD,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAOe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+D,a;AAYX,6BAAoB7F,WAApB,EAAuDC,MAAvD,EAAuE;AAAA;;AAAnD,aAAAD,WAAA,GAAAA,WAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;mCAElE;AAAA;;AACN,cAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;AACA,eAAKJ,WAAL,CAAiBK,WAAjB,CAA6BH,WAA7B,EAA0CI,SAA1C,CAAoD,UAAAC,QAAQ,EAAI;AAC9DC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,kBAAI,CAACG,SAAL,GAAiBH,QAAQ,CAAC,CAAD,CAAR,CAAYG,SAA7B;AACA,kBAAI,CAACC,QAAL,GAAgBJ,QAAQ,CAAC,CAAD,CAAR,CAAYI,QAA5B;AACA,kBAAI,CAACC,KAAL,GAAaL,QAAQ,CAAC,CAAD,CAAR,CAAYK,KAAzB,CAJ8D,CAM9D;;AACA,kBAAI,CAACC,SAAL,GAAiB,MAAI,CAACH,SAAtB;AACA,kBAAI,CAACI,SAAL,GAAiB,MAAI,CAACH,QAAtB;AAED,WAVD;AAYD;;;yCAEa;AACZ,cAAI,KAAKE,SAAL,KAAmB,EAAvB,EAA2B;AACzBE,iBAAK,CAAC,wBAAD,CAAL;AACA;AACD,WAHD,MAGO,IAAI,KAAKD,SAAL,KAAmB,EAAvB,EAA2B;AAChCC,iBAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAED,eAAKf,WAAL,CAAiBgB,UAAjB,CAA4B,KAAKJ,KAAjC,EAAwC,KAAKC,SAA7C,EAAwD,KAAKC,SAA7D,EAAwER,SAAxE,CAAkF,UAAAW,MAAM,EAAI;AAC1FT,mBAAO,CAACC,GAAR,CAAYQ,MAAZ;AACD,WAFD;AAID;;;yCAEa;AACZ,cAAI,KAAKC,WAAL,KAAqB,EAAzB,EAA4B;AAC1BH,iBAAK,CAAC,2BAAD,CAAL;AACA;AACD,WAHD,MAIK,IAAI,KAAKI,WAAL,KAAqB,EAAzB,EAA6B;AAEhCJ,iBAAK,CAAC,2BAAD,CAAL;AACA;AACD;;AACD,cAAIK,KAAK,GAAG,yCAAZ;;AACA,cAAG,CAAC,KAAKD,WAAL,CAAiBE,KAAjB,CAAuBD,KAAvB,CAAJ,EACA;AACEL,iBAAK,CAAC,+BAAD,CAAL;AACA,mBAAO,IAAP;AACD;;AAEDP,iBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKS,WAA5B,EAAyC,iBAAzC,EAA4D,KAAKC,WAAjE;AAEA,eAAKnB,WAAL,CAAiBsB,cAAjB,CAAgC,KAAKV,KAArC,EAA4C,KAAKM,WAAjD,EAA6D,KAAKC,WAAlE,EAA+Eb,SAA/E,CAAyF,UAACiB,GAAD,EAAQ;AAE/FR,iBAAK,CAACQ,GAAD,CAAL;AACD,WAHD;AAMD;;;iCAEQ;AAEP;AACAC,wBAAc,CAACC,UAAf,CAA0B,MAA1B;AACAtB,sBAAY,CAACsB,UAAb,CAAwB,MAAxB;AACAtB,sBAAY,CAACsB,UAAb,CAAwB,OAAxB;AACA,eAAKxB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,GAAD,CAArB,EANO,CAOP;AAED;;;;;;;uBAjFUmE,a,EAAa,4I,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,kH;AAAA;AAAA;ACT1B;;AACE;;AAAuB;;AAA+B;;AACtD;;AAA0B;;AAA6B;;AACvD;;AAA8B;;AAAqC;;AACrE;;;;;;;;;sEDKaA,a,EAAa;cALzB,uDAKyB;eALf;AACTjE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACGgB;;AACI;;AACI;;AAEE;;AAAgB;;AAAc;;AAC9B;;AAAmB;;AAA2B;;AAChD;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACA;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAAY;;AACpE;;AAA8F;AAAA;;AAAA;;AAAA;AAAA;;AAA9F;;AACA;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAAS;;AACnE;;AACE;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAA2B;;AAGnC;;AACA;;AACE;;AAA6C;;AAAM;;AAGnD;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+D;;AAAM;;AACjG;;AACF;;AACN;;;;;;AAlC0B;;AAAA;;AACG;;AAAA;;AAKZ;;AAAA;;AAeD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKH;;AAAA;;;;;;AAjCjB;;AACI;;AAwCJ;;;;;;;;AAxCS;;AAAA;;;;QDMRgE,oB;AAMX,oCAAoB9D,YAApB,EAAuD/B,MAAvD,EAAuE;AAAA;;AAAnD,aAAA+B,YAAA,GAAAA,YAAA;AAAmC,aAAA/B,MAAA,GAAAA,MAAA;AAJvD,aAAAqD,SAAA,GAAYC,KAAK,EAAjB;AAI0E;;;;mCAElE;AAAA;;AACN,eAAKpB,MAAL,GAAchC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BgC,QAA/B,EAAd,CADM,CAEN;;AACA,eAAKJ,YAAL,CAAkBwB,QAAlB,GAA6BlD,SAA7B,CAAuC,UAAAW,MAAM,EAAI;AAC/C,iBAAK,IAAIwC,CAAT,IAAcxC,MAAd,EAAsB;AACpB,kBAAI0C,IAAI,GAAG1C,MAAM,CAACwC,CAAD,CAAN,CAAUC,MAAV,CAAiBE,KAAjB,CAAuB,GAAvB,CAAX,CADoB,CAEpB;;AACA3C,oBAAM,CAACwC,CAAD,CAAN,CAAUI,UAAV,GAAuBF,IAAvB;AACA1C,oBAAM,CAACwC,CAAD,CAAN,CAAUK,aAAV,GAA0B,CAA1B;;AACA,oBAAI,CAACR,SAAL,CAAeU,IAAf,CAAoB/C,MAAM,CAACwC,CAAD,CAA1B;AACD;AACF,WARD;AASD,S,CAGC;;;;mCACWQ,M,EAAc;AAAA;;AACvB,cAAI8B,MAAM,GAAGC,OAAO,CAAC,2CAAD,CAApB;;AACA,cAAID,MAAM,IAAI,IAAd,EAAqB;AACnB,iBAAK/D,YAAL,CAAkBiE,UAAlB,CAA6BhC,MAA7B,EACC3D,SADD,CACW,UAAAC,QAAQ,EAAI;AACrBQ,mBAAK,CAAC,cAAD,CAAL;AACAP,qBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,QAAtC;;AACA,oBAAI,CAACN,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,aALD;AAMD;AACF;;;mCAEUuC,M,EAAc;AACvBlD,eAAK,iBAAUkD,MAAV,EAAL;AACD;;;kCAESnE,E,EAAE;AACV,eAAKwD,SAAL,CAAec,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,gBAAGA,IAAI,CAACvE,EAAL,IAAWA,EAAd,EAAkB;AAChB,kBAAGuE,IAAI,CAACP,aAAL,IAAsBO,IAAI,CAACR,UAAL,CAAgBZ,MAAhB,GAAuB,CAAhD,EACA;AACEoB,oBAAI,CAACP,aAAL,GAAqBO,IAAI,CAACP,aAAL,GAAqB,CAA1C;AACD;AACF;AACF,WAPD;AASD;;;kCAEShE,E,EAAE;AACV,eAAKwD,SAAL,CAAec,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,gBAAGA,IAAI,CAACvE,EAAL,IAAWA,EAAd,EAAkB;AAChB,kBAAGuE,IAAI,CAACP,aAAL,IAAsB,CAAzB,EACA;AACEO,oBAAI,CAACP,aAAL,GAAqBO,IAAI,CAACP,aAAL,GAAqB,CAA1C;AACD;AACF;AACF,WAPD;AASD;;;oCAEWhE,E,EAAE;AAAA;;AACZ,eAAKwD,SAAL,CAAec,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,gBAAGA,IAAI,CAACvE,EAAL,IAAWA,EAAd,EAAkB;AAChB,kBAAIoG,QAAQ,GAAG7B,IAAI,CAACR,UAAL,CAAgBQ,IAAI,CAACP,aAArB,CAAf;AACAO,kBAAI,CAACR,UAAL,CAAgBsC,MAAhB,CAAuB9B,IAAI,CAACP,aAA5B,EAA0C,CAA1C;AACAO,kBAAI,CAACP,aAAL,GAAqB,CAArB;AAEA,kBAAIsC,kBAAkB,GAAG/B,IAAI,CAACR,UAAL,CAAgBwC,IAAhB,CAAqB,GAArB,CAAzB;;AACA,oBAAI,CAACrE,YAAL,CAAkBsE,iBAAlB,CAAoCxG,EAApC,EAAwCsG,kBAAxC,EAA4DF,QAA5D,EAAsE5F,SAAtE,CAAgF,UAAAW,MAAM,EAAE,CAEvF,CAFD;AAID;AACF,WAZD;AAaD;;;qCAEY6B,K,EAAK;AAChBtC,iBAAO,CAACC,GAAR,CAAYqC,KAAK,CAACC,MAAN,CAAaC,KAAzB;;AACA,cAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,iBAAKsD,KAAL,GAAazD,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACAxC,mBAAO,CAACC,GAAR,CAAY,KAAK8F,KAAjB,EAFiC,CAGjC;AAED;AACF;;;iCAEQlC,I,EAAI;AAAA;;AACX,cAAG,KAAKkC,KAAL,IAAY,IAAZ,IAAoB,KAAKA,KAAL,IAAYC,SAAnC,EAA6C;AAC3C,gBAAMvE,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,oBAAQ,CAACM,MAAT,CAAgB,IAAhB,EAAsB8B,IAAI,CAACvE,EAA3B;AACAmC,oBAAQ,CAACM,MAAT,CAAgB,QAAhB,EAA0B8B,IAAI,CAACX,MAA/B;AACAzB,oBAAQ,CAACM,MAAT,CAAgB,OAAhB,EAAyB,KAAKgE,KAA9B;AAGJ,iBAAKvE,YAAL,CAAkByE,cAAlB,CAAiCxE,QAAjC,EACC3B,SADD,CACW,UAAAC,QAAQ,EAAI;AACrBQ,mBAAK,CAAC,YAAD,CAAL;AACAP,qBAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,oBAAI,CAACN,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AAED,aAND;AAQG,WAfD,MAgBK;AACHX,iBAAK,CAAC,mBAAD,CAAL;AACD;AACF;;;;;;;uBA9GQ+E,oB,EAAoB,2I,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,oc;AAAA;AAAA;ACTjC;;AACI;;AACQ;;AA0CR;;AAEJ;;;;AA5CgB;;AAAA;;;;;;;;;sEDOHA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTlE,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa4E,mB;AAWX,mCAAoBC,KAApB,EAAmDC,WAAnD,EAAsF3G,MAAtF,EAAqG;AAAA;;AAAjF,aAAA0G,KAAA,GAAAA,KAAA;AAA+B,aAAAC,WAAA,GAAAA,WAAA;AAAmC,aAAA3G,MAAA,GAAAA,MAAA;AAAkB;;;;mCAEhG;AAAA;;AACN,eAAKH,EAAL,GAAU,KAAK6G,KAAL,CAAWE,QAAX,CAAoBC,MAApB,CAA2B7C,MAArC;AACA,eAAK2C,WAAL,CAAiBG,eAAjB,CAAiC,KAAKjH,EAAtC,EAA0CQ,SAA1C,CAAoD,UAAAW,MAAM,EAAI;AAC5DT,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCQ,MAAlC;AACA,mBAAI,CAACoD,IAAL,GAAYpD,MAAZ;AACA,mBAAI,CAACuB,IAAL,GAAYvB,MAAM,CAACuB,IAAnB;AACA,mBAAI,CAACC,KAAL,GAAaxB,MAAM,CAACwB,KAApB;AACA,mBAAI,CAACC,OAAL,GAAezB,MAAM,CAACyB,OAAtB;AACA,mBAAI,CAACsE,gBAAL,GAAwB,KAAxB;AACA,mBAAI,CAACrE,KAAL,GAAa1B,MAAM,CAAC0B,KAApB;AACA,mBAAI,CAACC,QAAL,GAAgB3B,MAAM,CAAC2B,QAAvB;AAEApC,mBAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,OAAI,CAAC4D,IAA1C;AACD,WAXD;AAYD;AAED;;;;;;;;;;;qCASU;AAAA;;AACR,eAAKuC,WAAL,CAAiBK,UAAjB,CAA4B,KAAKzE,IAAjC,EAAuC,KAAKC,KAA5C,EAAmD,KAAKC,OAAxD,EAAiE,KAAKC,KAAtE,EAA6E,KAAKC,QAAlF,EAA4F,KAAK9C,EAAjG,EACGQ,SADH,CACa,UAAAW,MAAM,EAAI;AACnBF,iBAAK,CAAC,cAAD,CAAL;AACAP,mBAAO,CAACC,GAAR,CAAYQ,MAAZ;;AACA,mBAAI,CAAChB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD,WALH;AAOD;;;;;;;uBA9CUgF,mB,EAAmB,+H,EAAA,2I,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,i5B;AAAA;AAAA;ACXhC;;AACI;;AAAI;;AAAW;;AACf;;AAAM;AAAA,mBAAY,IAAAO,UAAA,EAAZ;AAAwB,WAAxB;;AACF;;AACI;;AAAkB;;AAAI;;AACtB;;AAEO;AAAA;AAAA;;AAFP;;AAGF;;AAAM;;AAEN;;AACE;;AAAmB;;AAAK;;AACxB;;AAEO;AAAA;AAAA;;AAFP;;AAGF;;AAAM;;AAEN;;AACE;;AAAqB;;AAAO;;AAC5B;;AAEO;AAAA;AAAA;;AAFP;;AAGF;;AAAM;;AAEN;;AACE;;AAAmB;;AAAK;;AACxB;;AAEO;AAAA;AAAA;;AAFP;;AAGF;;AAAM;;AAEN;;AACE;;AAAsB;;AAAQ;;AAC9B;;AACO;AAAA;AAAA;;AADP;;AAEF;;AAAM;;AAEN;;AAAgF;;AAAM;;AAE5F;;AACJ;;;;;;AAjCmB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAMA;;AAAA;;AAGqC;;AAAA;;;;;;;;;sED1B3CP,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT9E,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACQA;;AACE;;AAA0E;;AAAQ;;AACpF;;AACE;;AAAmC;;AAAsB;;AAAQ;;AAAS;;AAC1E;;AAAsC;;AAAuB;;AAAa;;AAAS;;AACrF;;AAGI;;AAA+B;;AAAsD;;AAAS;;AAAS;;AACvG;;AAAiC;;AAAqD;;AAAU;;AAAS;;AACzG;;AAA8B;;AAAqD;;AAAI;;AAAS;;AACpG;;;;;;AAV4C;;AAAA;;AAEvC;;AAAA;;AACA;;AAAA;;AAIE;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;;;;;AAGH;;AACE;;AAAgC;;AAAqD;;AAAM;;AAAS;;AACtG;;AAAgC;;AAAqD;;AAAO;;AAAS;;AACrG;;;;AAFK;;AAAA;;AACF;;AAAA;;;;;;;;AAEH;;AAA2B;AAAA;;AAAA;;AAAA;AAAA;;AAAgE;;AAAO;;;;QDfzFoF,a;AAGX,6BAAoBjH,MAApB,EAA2CkH,gBAA3C,EAA+E;AAAA;;AAA3D,aAAAlH,MAAA,GAAAA,MAAA;AAAuB,aAAAkH,gBAAA,GAAAA,gBAAA;;AACzC,YAAI3F,cAAc,CAACpB,OAAf,CAAuB,MAAvB,MAAmC,IAAvC,EAA6C;AAC3C,eAAKgH,QAAL,GAAgB,KAAhB;AACD,SAFD,MAEO;AACL,eAAKA,QAAL,GAAgB,IAAhB;AACD;AACD;;;;mCAEM;AAAA;;AACF;AACA,eAAKD,gBAAL,CAAsBE,MAAtB,CAA6B/G,SAA7B,CAAuC,UAAAqF,KAAK,EAAI;AAE9C,mBAAI,CAACyB,QAAL,GAAgBzB,KAAK,CAACyB,QAAtB;AACD,WAHD;AAIL;;;iCAEQ;AAEP;AACA5F,wBAAc,CAACC,UAAf,CAA0B,MAA1B;AACAtB,sBAAY,CAACsB,UAAb,CAAwB,MAAxB;AACAtB,sBAAY,CAACsB,UAAb,CAAwB,OAAxB;AACAtB,sBAAY,CAACsB,UAAb,CAAwB,QAAxB;AACA,eAAK2F,QAAL,GAAgB,KAAhB;AACA,eAAKnH,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,GAAD,CAArB,EARO,CASP;AAED;;;;;;;uBA9BUwF,a,EAAa,uH,EAAA,4I;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,ohB;AAAA;AAAA;ACV1B;;AAGQ;;AACE;;AAA+B;;AAAU;;AAAI;;AAAW;;AAC1D;;AACJ;;AAAM;;AAAyB;;AAC/B;;AACJ;;AAaI;;AAIA;;AAEJ;;;;AAvBa;;AAAA;;AAIR;;AAAA;;AAaI;;AAAA;;AAIG;;AAAA;;;;;;;;;sEDfCA,a,EAAa;cALzB,uDAKyB;eALf;AACTtF,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;;;QACawF,c,GAAb;AAAA;;AACI,WAAAF,QAAA,GAAqB,KAArB;AAGD,K;;;;;;;;;;;;;;;;;ACJH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,kE,CAEA;;;QAMaG,gB,GAKX,4BAAc;AAAA;;AACZ,WAAKF,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA,K;;;uBAPSE,gB;AAAgB,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAJf;;;;;sEAIDA,gB,EAAgB;cAL5B,wDAK4B;eALjB;AACVC,oBAAU,EAAE;AADF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;ACT7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,Y;AAIX;AACA,4BAAoBC,IAApB,EAAqC;AAAA;;AAAjB,aAAAA,IAAA,GAAAA,IAAA,CAAiB,CAHrC;;AACA,aAAAC,UAAA,GAAoB,YAAYC,MAAM,CAACpC,QAAP,CAAgBqC,QAA5B,GAAuC,OAA3D;AAEwC;;;;gCAGhC5F,Q,EAAkB;AAExB,cAAM6F,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CAFwB,CAIxB;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAMD,iBAAO,KAAKL,IAAL,CAAUQ,IAAV,CAAe,KAAKP,UAAL,GAAgB,QAA/B,EAAyC1F,QAAzC,EAAmD+F,WAAnD,CAAP;AACA;AACH;;;;;;;;;;;;;;;;;;;;;mCAmBU;AACN,iBAAO,KAAKN,IAAL,CAAUS,GAAV,CAAc,KAAKR,UAAL,GAAkB,QAAhC,CAAP;AACD;;;mCAEU1D,M,EAAgB;AACzB,cAAM6D,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CADyB,CAEzB;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAKAvH,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BwD,MAA3B;AACA,iBAAO,KAAKyD,IAAL,WAAiB,KAAKC,UAAL,GAAkB,SAAlB,GAA8B1D,MAA/C,EAAuD+D,WAAvD,CAAP;AACD,S,CAED;;;;wCACgBlI,E,EAAW;AACzB,cAAMgI,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CADyB,CAEzB;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAKA,iBAAO,KAAKL,IAAL,CAAUS,GAAV,CAAc,KAAKR,UAAL,GAAkB,SAAlB,GAA6B7H,EAA3C,EAA+CkI,WAA/C,CAAP;AACD,S,CAED;;;;mCAEWxF,I,EAAYC,K,EAAeC,O,EAAgBC,K,EAAcC,Q,EAAiB9C,E,EAAS;AAE5F,cAAMgI,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CAF4F,CAG5F;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAMD,iBAAO,KAAKL,IAAL,CAAUU,GAAV,CAAc,KAAKT,UAAL,GAAgB,QAA9B,EAAuC;AAC7CnF,gBAAI,EAAJA,IAD6C;AACvCC,iBAAK,EAALA,KADuC;AAChCC,mBAAO,EAAPA,OADgC;AACvBC,iBAAK,EAALA,KADuB;AAChBC,oBAAQ,EAARA,QADgB;AACNqB,kBAAM,EAAEnE;AADF,WAAvC,EAELkI,WAFK,CAAP;AAGA;;;0CAEiBlI,E,EAAIsG,kB,EAAoBF,Q,EAAQ;AAC5C,cAAM4B,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CAD4C,CAEhD;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAMA,iBAAO,KAAKL,IAAL,CAAUU,GAAV,CAAc,KAAKT,UAAL,GAAgB,gBAA9B,EAA+C;AACpD7H,cAAE,EAAFA,EADoD;AAChDsG,8BAAkB,EAAlBA,kBADgD;AAC5BF,oBAAQ,EAARA;AAD4B,WAA/C,EAEJ8B,WAFI,CAAP;AAGD;;;uCAGc/F,Q,EAAkB;AAE/B,cAAM6F,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CAF+B,CAI/B;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAMD,iBAAO,KAAKL,IAAL,CAAUQ,IAAV,CAAe,KAAKP,UAAL,GAAgB,gBAA/B,EAAiD1F,QAAjD,EAA2D+F,WAA3D,CAAP;AACA;;;;;;;uBAtHUP,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAHX;;;;;sEAGDA,Y,EAAY;cAJxB,wDAIwB;eAJb;AACVD,oBAAU,EAAE;AADF,S;AAIa,Q;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaa,W;AAGX;AAEA,2BAAoBX,IAApB,EAAqC;AAAA;;AAAjB,aAAAA,IAAA,GAAAA,IAAA;AAHpB,aAAAC,UAAA,GAAoB,YAAYC,MAAM,CAACpC,QAAP,CAAgBqC,QAA5B,GAAuC,OAA3D;AAGwC;;;;kCAG9B5D,M,EAAgBrB,Q,EAAgB;AACxC,cAAMT,MAAM,GAAGhC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BgC,QAA/B,EAAf;AACA,cAAM0F,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CAFwC,CAGxC;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAMD,iBAAO,KAAKL,IAAL,CAAUQ,IAAV,CAAe,KAAKP,UAAL,GAAgB,QAAhB,GAA0BxF,MAAzC,EAAgD;AACtD8B,kBAAM,EAANA,MADsD;AAC9CrB,oBAAQ,EAARA;AAD8C,WAAhD,EAELoF,WAFK,CAAP;AAGA;;;kCAEM;AACL,cAAM7F,MAAM,GAAGhC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BgC,QAA/B,EAAf;AACA,iBAAO,KAAKsF,IAAL,CAAUS,GAAV,CAAc,KAAKR,UAAL,GAAiB,QAAjB,GAA0BxF,MAAxC,CAAP;AACD;;;uCAEcmD,M,EAAc;AAC3B,cAAMnD,MAAM,GAAGhC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BgC,QAA/B,EAAf;AACA,cAAM0F,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CAF2B,CAG3B;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB,CADS;AAIlBO,gBAAI,EAAE;AACJxI,gBAAE,EAAEwF;AADA;AAJY,WAApB;AASA,iBAAO,KAAMoC,IAAN,WAAkB,KAAKC,UAAL,GAAkB,QAAlB,GAA2BxF,MAA7C,EAAqD6F,WAArD,CAAP;AAED;;;mCAEU1C,M,EAAgBrB,M,EAAgByB,W,EAAmB;AAC5D,cAAMvD,MAAM,GAAGhC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BgC,QAA/B,EAAf;AACA,cAAM0F,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CAF4D,CAG5D;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAMD,iBAAO,KAAKL,IAAL,CAAUU,GAAV,CAAc,KAAKT,UAAL,GAAgB,QAAhB,GAA0BxF,MAAxC,EAA+C;AACrD8B,kBAAM,EAANA,MADqD;AAC7CyB,uBAAW,EAAXA,WAD6C;AAChC5F,cAAE,EAACwF;AAD6B,WAA/C,EAEL0C,WAFK,CAAP;AAGA;;;0CAGiB;AAChB,cAAM7F,MAAM,GAAGhC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BgC,QAA/B,EAAf;AACA,iBAAO,KAAKsF,IAAL,CAAUS,GAAV,CAAc,KAAKR,UAAL,GAAgB,cAAhB,GAAgCxF,MAA9C,CAAP;AACD;;;;;;;uBAnEUkG,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVb,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oE,CASA;;;QACae,Y;AAGX;AAEA,4BAAoBb,IAApB,EAAmC;AAAA;;AAAf,aAAAA,IAAA,GAAAA,IAAA;AAHpB,aAAAC,UAAA,GAAoB,YAAYC,MAAM,CAACpC,QAAP,CAAgBqC,QAA5B,GAAuC,OAA3D;AAGsC;;;;+BAG/BjH,K,EAAa4H,Q,EAAe;AAEjC,cAAMR,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,8BAAgB;AADO,aAAhB;AADS,WAApB;AAKA,iBAAO,KAAKP,IAAL,CAAUQ,IAAV,CAAe,KAAKP,UAAL,GAAgB,eAA/B,EAA+C;AACpD/G,iBAAK,EAALA,KADoD;AAEpD4H,oBAAQ,EAARA;AAFoD,WAA/C,CAAP;AAID;;;+BAGM5H,K,EAAaF,S,EAAmBC,Q,EAAiB6H,Q,EAAe;AAEtE,cAAMR,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,8BAAiB;AADM,aAAhB;AADS,WAApB;AAMA,cAAMK,IAAI,GAAG;AACZ1H,iBAAK,EAALA,KADY;AACNF,qBAAS,EAATA,SADM;AACIC,oBAAQ,EAARA,QADJ;AACa6H,oBAAQ,EAARA;AADb,WAAb;AAIAhI,iBAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkD6H,IAAlD;AACA,iBAAO,KAAKZ,IAAL,CAAUQ,IAAV,CAAe,KAAKP,UAAL,GAAgB,eAA/B,EAA+CW,IAA/C,EAAoDN,WAApD,CAAP;AACA;;;oCAEWpH,K,EAAc;AACxB,cAAMkH,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CADwB,CAExB;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAKA,iBAAO,KAAKL,IAAL,CAAUS,GAAV,CAAc,KAAKR,UAAL,GAAkB,SAAlB,GAA8B/G,KAA5C,EAAmDoH,WAAnD,CAAP;AACD;;;mCAEUpH,K,EAAcF,S,EAAkBC,Q,EAAkB;AAC3D,cAAMmH,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CAD2D,CAE3D;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAQA,iBAAO,KAAKL,IAAL,CAAUU,GAAV,CAAc,KAAKT,UAAL,GAAkB,sBAAhC,EAAwD;AAC7DjH,qBAAS,EAATA,SAD6D;AAE7DC,oBAAQ,EAARA,QAF6D;AAG7DC,iBAAK,EAALA;AAH6D,WAAxD,EAIJoH,WAJI,CAAP;AAKD;;;uCAEcpH,K,EAAcM,W,EAAoBC,W,EAAqB;AACpE,cAAM2G,KAAK,GAAG3H,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BgC,QAA9B,EAAd,CADoE,CAEpE;;AACA,cAAM2F,MAAM,GAAG,YAAYD,KAA3B;AACA,cAAME,WAAW,GAAG;AAClBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,+BAAiBF;AADM,aAAhB;AADS,WAApB;AAQA,iBAAO,KAAKL,IAAL,CAAUU,GAAV,CAAc,KAAKT,UAAL,GAAkB,0BAAhC,EAA4D;AACjE/G,iBAAK,EAALA,KADiE;AAEjEM,uBAAW,EAAXA,WAFiE;AAGjEC,uBAAW,EAAXA;AAHiE,WAA5D,EAIJ6G,WAJI,CAAP;AAKD;;;;;;;uBAtFUO,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAJX;;;;;sEAIDA,Y,EAAY;cALxB,wDAKwB;eALb;AACVf,oBAAU,EAAE;AADF,S;AAKa,Q;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaiB,e;AAMX,+BAAoBzI,WAApB,EAAuDC,MAAvD,EAA+EkH,gBAA/E,EAAmH;AAAA;;AAA/F,aAAAnH,WAAA,GAAAA,WAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAkH,gBAAA,GAAAA,gBAAA;AAF/E,aAAAuB,cAAA,GAAiC,IAAI,qEAAJ,EAAjC;AAEsH;;;;mCAE9G;AACN;AACA,cAAI9H,KAAK,GAAGT,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;;AACA,cAAIQ,KAAJ,EAAU;AACR,iBAAKX,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AACF;;;oCAEQ;AAAA;;AACP,cAAI,KAAKd,KAAL,KAAe,EAAnB,EAAuB;AACrBG,iBAAK,CAAC,oBAAD,CAAL;AACA;AACD,WAHD,MAGO,IAAI,KAAKyH,QAAL,KAAkB,EAAtB,EAA0B;AAC/BzH,iBAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAED,eAAKf,WAAL,CAAiB2I,MAAjB,CAAwB,KAAK/H,KAA7B,EAAoC,KAAK4H,QAAzC,EAAmDlI,SAAnD,CAA6D,UAAAC,QAAQ,EAAI;AAErEC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,gBAAIA,QAAQ,CAACU,MAAT,KAAoB,cAAxB,EAAwC;AACtCF,mBAAK,CAAC,kBAAD,CAAL;AACD,aAFD,MAEO,IAAIR,QAAQ,KAAK,IAAjB,EAAuB;AAC5B;AACA;AAEA;AACA;AAEAC,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACG,KAAL,GAAa,YAAzB;AACAJ,qBAAO,CAACC,GAAR,CAAYF,QAAQ,CAACU,MAArB;AAEA,qBAAI,CAACyH,cAAL,CAAoBtB,QAApB,GAA+B,IAA/B;;AACA,qBAAI,CAACD,gBAAL,CAAsBE,MAAtB,CAA6BuB,IAA7B,CAAkC,OAAI,CAACF,cAAvC;;AAEAvI,0BAAY,CAAC0I,OAAb,CAAqB,OAArB,EAA8BtI,QAAQ,CAACuH,KAAvC;AACA3H,0BAAY,CAAC0I,OAAb,CAAqB,QAArB,EAA+BtI,QAAQ,CAACuI,IAAT,CAAchJ,EAA7C,EAd4B,CAe5B;;AACAK,0BAAY,CAAC0I,OAAb,CAAqB,MAArB,EAA4B,OAAI,CAACjI,KAAjC;AACAY,4BAAc,CAACqH,OAAf,CAAuB,MAAvB,EAA+B,OAAI,CAACjI,KAApC;;AAGA,qBAAI,CAACX,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,QAAD,CAArB,EApB4B,CAqB5B;;AAED,aAvBM,MAuBA;AACLX,mBAAK,CAAC,kBAAD,CAAL;AACD;AACF,WA/BH;AAiCD;;;;;;;uBA1DU0H,e,EAAe,4I,EAAA,uH,EAAA,4I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,8gB;AAAA;AAAA;ACV5B;;AACI;;AACE;;AAEI;;AACI;;AACE;;AAAe;;AAAM;;AAEnB;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AAEF;;AAAM;;AAGN;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AAAM;;AAGV;;AACE;;AAA4B;AAAA,mBAAS,IAAAM,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAK;;AACzD;;AAEE;;AACN;;AACD;;AACD;;AACJ;;;;AAlBuB;;AAAA;;AAMA;;AAAA;;;;;;;;;sEDLdN,e,EAAe;cAL3B,uDAK2B;eALjB;AACT7G,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUakH,e;AAUX,+BAAoB/I,MAApB,EAA2CD,WAA3C,EAAqE;AAAA;;AAAjD,aAAAC,MAAA,GAAAA,MAAA;AAAuB,aAAAD,WAAA,GAAAA,WAAA;AAF3C,aAAAiJ,OAAA,GAAY,qEAAZ;AAEwE;;;;mCAEhE;AACL;AACA,cAAIrI,KAAK,GAAGT,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;;AACA,cAAIQ,KAAJ,EAAU;AAER,iBAAKX,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AACH;;;mCAGO;AAAA;;AACN,cAAIN,KAAK,GAAG,yCAAZ;;AAGA,cAAG,KAAKR,KAAL,IAAc,IAAjB,EAAsB;AACpBG,iBAAK,CAAC,mBAAD,CAAL;AACD,WAFD,MAGK,IAAG,CAAC,KAAKH,KAAL,CAAWS,KAAX,CAAiB,KAAK4H,OAAtB,CAAJ,EAAmC;AACtClI,iBAAK,CAAC,6BAAD,CAAL;AACD,WAFI,MAGA,IAAG,KAAKL,SAAL,IAAkB,IAArB,EAA0B;AAC7BK,iBAAK,CAAC,8BAAD,CAAL;AACD,WAFI,MAGA,IAAG,KAAKyH,QAAL,IAAiB,IAAjB,IAAyB,KAAKA,QAAL,IAAiB,KAAKU,UAA/C,IAA6D,KAAKA,UAAL,IAAiB,IAAjF,EAAsF;AAEzF,gBAAG,CAAC,KAAKV,QAAL,CAAcnH,KAAd,CAAoBD,KAApB,CAAJ,EACF;AACEL,mBAAK,CAAC,+BAAD,CAAL;AACA,qBAAO,IAAP;AACD;;AAECP,mBAAO,CAACC,GAAR,CAAY,iBAAZ,EARyF,CASzF;;AACA,iBAAKT,WAAL,CAAiBmJ,MAAjB,CAAwB,KAAKvI,KAA7B,EAAoC,KAAKF,SAAzC,EAAoD,KAAKC,QAAzD,EAAmE,KAAK6H,QAAxE,EAAkFlI,SAAlF,CAA4F,UAACiB,GAAD,EAAO;AAEjGf,qBAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2Cc,GAA3C;;AACA,kBAAGA,GAAG,CAAC6H,MAAJ,IAAc,GAAjB,EAAqB;AACnBrI,qBAAK,CAAC,uBAAD,CAAL;AACD,eAFD,MAGK;AACHA,qBAAK,CAAC,sCAAD,CAAL;;AACA,uBAAI,CAACd,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD;AACF,aAVD;AAaD,WAvBI,MAwBD;AACFX,iBAAK,CAAC,eAAD,CAAL;AACD;AACF;;;;;;;uBA9DUiI,e,EAAe,uH,EAAA,4I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,83B;AAAA;AAAA;ACT5B;;AACI;;AACE;;AACA;;AACI;;AAA+B;;AAAO;;AACtC;;AACI;;AACE;;AACI;;AACA;AAAA;AAAA;;AADA;;AAEJ;;AAAM;;AACN;;AACI;;AACA;AAAA;AAAA;;AADA;;AAEJ;;AAAM;;AAEN;;AACI;;AACA;AAAA;AAAA;;AADA;;AAEJ;;AAAM;;AAEN;;AACI;;AACA;AAAA;AAAA;;AADA;;AAEJ;;AAAM;;AAEN;;AACI;;AACA;AAAA;AAAA;;AADA;;AAEJ;;AAAM;;AAGN;;AACM;;AAAkB;AAAA,mBAAW,IAAAK,QAAA,EAAX;AAAqB,WAArB;;AAAuB;;AAAQ;;AACvD;;AAAM;;AACR;;AAEJ;;AACJ;;AACF;;AACF;;;;AA/BkB;;AAAA;;AAIA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDnBPL,e,EAAe;cAL3B,uDAK2B;eALjB;AACTpH,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMwH,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIjJ,OAAO,CAACkJ,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from 'src/app/services/users.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account-info',\n  templateUrl: './account-info.component.html',\n  styleUrls: ['./account-info.component.scss']\n})\nexport class AccountInfoComponent implements OnInit {\n\n  firstname: string;\n  lastname:string;\n  email:string;\n  oldpassword: string;\n  newpassword: string;\n  renewpassword: string;\n\n  tempfname:string\n  templname:string\n\n  constructor(private userService: UsersService, private router: Router) { }\n\n  ngOnInit(): void {\n    var currentuser = localStorage.getItem(\"user\");\n    this.userService.GetUserInfo(currentuser).subscribe(response => {\n      console.log(response);\n      this.firstname = response[0].firstname;\n      this.lastname = response[0].lastname;\n      this.email = response[0].email;\n\n      // Set the text fields \n      this.tempfname = this.firstname\n      this.templname = this.lastname\n\n    });\n\n  }\n\n  UpdateUserInfo(){\n    if (this.tempfname === '') {\n      alert('please input firstname');\n      return;\n    } else if (this.templname === '') {\n      alert('please input lastname');\n      return;\n    }\n\n    this.userService.UpdateInfo(this.email, this.tempfname, this.templname).subscribe(result => {\n      console.log(result);\n    })\n\n  }\n\n  UpdatePassword(){\n    if (this.oldpassword === ''){\n      alert('please input the password');\n      return;\n    }\n    else if (this.newpassword === '') {\n      \n      alert('please input new password');\n      return;\n    }\n    var passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n    if(!this.newpassword.match(passw)) \n    { \n      alert('Weak password, try another...')\n      return true;\n    }\n\n    console.log(\"sending\", this.oldpassword, \"    -------    \", this.newpassword)\n\n    this.userService.UpdatePassword(this.email, this.oldpassword,this.newpassword).subscribe((res) =>{\n      \n      alert(res);\n    })\n\n\n  }\n\n  logout() {\n    \n    //this.shareInfoClass.logIn = false;\n    sessionStorage.removeItem('user');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    this.router.navigate(['/']);\n    //this.status = 'Login';\n\n  }\n\n}\n","<div class=\"accountContainer\">\n  <div>\n    <h1>Account Info</h1><br>\n    <h2>Firstname: {{firstname}}</h2><br>\n    <h2>Lastname: {{lastname}}</h2><br>\n    <h2>Email: {{email}}</h2><br>\n\n\n\n    <form>\n        <!--  Div class for firstname -->\n          <div class=\"form-group\">\n            <input [(ngModel)]=\"tempfname\" class=\"form-control\" type=\"text\" required name=\"firstname\" placeholder=\"Enter firstname\"\n              required minlength=\"5\" maxlength=\"40\" />\n          </div><br>\n\n          <!-- Div class for lastname -->\n          <div class=\"form-group\">\n            <input [(ngModel)]=\"templname\" class=\"form-control\" type=\"text\" required name=\"lastname\" placeholder=\"Enter lastname\">\n          </div><br>    \n\n           <!-- Div class for Login Button -->\n      <div class=\"form-group\">\n        <button class=\"button\" (click)=\"UpdateUserInfo()\">Update Info</button>\n      </div><br>\n\n        </form>\n        <form>\n          <!--  Div class for firstname -->\n            <div class=\"form-group\">\n              <input [(ngModel)]=\"oldpassword\" class=\"form-control\" type=\"password\" required name=\"oldpassword\" placeholder=\"Enter current password\"\n                required minlength=\"5\" maxlength=\"40\" />\n            </div><br>\n  \n            <!-- Div class for lastname -->\n            <div class=\"form-group\">\n              <input [(ngModel)]=\"newpassword\" class=\"form-control\" type=\"password\" required name=\"newpassword\" placeholder=\"Enter new password\">\n            </div><br>\n  \n             <!-- Div class for Login Button -->\n        <div class=\"form-group\">\n          <button class=\"button\" (click)=\"UpdatePassword()\">Update Password</button>\n        </div><br>\n  \n          </form>\n</div>\n\n<br>\n\n\n\n        \n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Books} from '../models/books'\nimport {FormControl, Validators} from '@angular/forms';\nimport {BooksService} from '../services/books/books.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.scss']\n})\nexport class AddBookComponent implements OnInit {\n\n  public isbn: string;\n  public title: string;\n  public authors: string;\n  public price: number;\n  public quantity: number;\n  public image: File;\n  public allImages: []; \n\n  constructor(private booksService: BooksService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  // Method to create a new book\n  submitBook(){\n    const formData = new FormData();\n    const userId = localStorage.getItem('userId').toString();\n\n    for(let img of this.allImages){\n      formData.append('image', img);\n    }\n    \n    formData.append(\"userId\", userId);\n    formData.append('isbn', this.isbn);\n    formData.append('title', this.title);\n    formData.append('authors', this.authors);\n    formData.append('price', this.price.toString());\n    formData.append('quantity', this.quantity.toString());\n\n    console.log(formData);\n\n    this.booksService.addBook(formData)\n      .subscribe(response => {\n        alert(\"Book added\");\n        console.log(response);\n        this.router.navigate(['/books/manage']);\n\n      })\n\n    /*this.booksService.addBook(this.isbn, this.title, this.authors, this.price, this.quantity)\n      .subscribe(response => {\n        alert(\"Book added\");\n        console.log(response);\n        this.router.navigate(['/books/manage']);\n\n      })*/ \n  }\n\n  onFileSelect(event){\n    console.log(event.target.files);\n    if (event.target.files.length > 0) {\n      //this.image = event.target.files[0];\n      //console.log(this.image);\n      //this.uploadForm.get('profile').setValue(file);\n      this.allImages = event.target.files; \n    }\n  }\n\n}\n","<div class=\"container\">\n    <h3>Add a new book</h3>\n    <form (ngSubmit)=\"submitBook()\" #bookForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"isbn\">ISBN</label>\n            <input type=\"text\" class=\"form-control\" id=\"isbn\"\n                   required\n                   [(ngModel)]=\"isbn\" name=\"isbn\">\n          </div><br>\n          \n          <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <input type=\"text\"  class=\"form-control\" id=\"title\"\n                    required\n                   [(ngModel)]=\"title\" name=\"title\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"authors\">Authors</label>\n            <input type=\"text\"  class=\"form-control\" id=\"authors\"\n            required\n                   [(ngModel)]=\"authors\" name=\"authors\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"price\">Price</label>\n            <input type=\"number\" step=\"0.01\" min=\"0.01\" max=\"9999.99\"  class=\"form-control\" id=\"price\"\n            required\n                   [(ngModel)]=\"price\" name=\"price\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"quantity\">Quantity</label>\n            <input type=\"number\" min=\"0\" max=\"999\" class=\"form-control\" id=\"quantity\" required\n                   [(ngModel)]=\"quantity\" name=\"quantity\">\n          </div><br>\n          <!-- <div class=\"form-group\">\n            <label for=\"quantity\">Upload Image</label>\n            <input #image id=\"imageInput\" class=\"inputfile\" type=\"file\" accept=\"image/*\" (change)=\"fileChangeEvent($event)\"/>\n          </div> -->\n          <input type=\"file\"  accept=\"image/png, image/jpeg, image/jpg\" multiple=\"true\" name=\"profile\" (change)=\"onFileSelect($event)\" /><br>\n\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!bookForm.form.valid\">Submit</button>\n          \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {BooksService} from '../services/books/books.service'\nimport {CartService} from '../services/cart/cart.service'\nimport { element } from 'protractor';\n@Component({\n  selector: 'app-all-books',\n  templateUrl: './all-books.component.html',\n  styleUrls: ['./all-books.component.scss']\n})\nexport class AllBooksComponent implements OnInit {\n\n  booksList = Array();\n  userId: string;\n  selectedQuantity: number; \n\n  constructor(private booksService:BooksService, private cartService:CartService) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem(\"userId\").toString();\n    //Retrieve a list of all the books \n    this.booksService.getBooks().subscribe(result => {\n      console.log(\"received from getBooks\", result);\n      for (let x in result) {\n        console.log(result[x].images)\n        var urls = result[x].images.split(';');\n        //urls.pop(); \n        console.log(urls);\n        \n        result[x].imageArray = urls;\n        result[x].selectedIndex = 0;  \n        result[x].cartQuantity = 1; \n        \n        this.booksList.push(result[x])\n        console.log(result[x].cartQuantity , typeof result[x]);\n      }\n    })\n  }\n\n  addToCart(bookId:string, quan:number){\n    alert(`Quantity : ${quan} and book id is ${bookId}`)\n    this.cartService.addToCart(bookId, quan).subscribe(result => {\n      console.log(result);\n    })\n  }\n\n  nextImage(id){\n    this.booksList.forEach(book => {\n      if(book.id == id) {\n        if(book.selectedIndex != book.imageArray.length-1)\n        {\n          book.selectedIndex = book.selectedIndex + 1;\n        }\n      }\n    })\n    \n  }\n\n  prevImage(id){\n    this.booksList.forEach(book => {\n      if(book.id == id) {\n        if(book.selectedIndex != 0)\n        {\n          book.selectedIndex = book.selectedIndex - 1;\n        }\n      }\n    })\n    \n  }\n\n}\n","<div class=\"container\">\n    <ul>\n        <li *ngFor = \"let book of booksList\" >\n            <mat-card *ngIf = \"(book.quantity == 0) == false\" class=\"example-card\">\n                <mat-card-header>\n                 <!-- <div mat-card-avatar class=\"example-header-image\"></div>-->\n                  <mat-card-title>{{book.title}}</mat-card-title>\n                  <mat-card-subtitle>Author(s): {{book.authors}}</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                  <div class=\"mySlides\">                \n                    <img src=\"{{book.imageArray[book.selectedIndex]}}\" style=\"width:100%\">                    \n                  </div>\n                  <div class=\"scrollPhotos\">\n                    <button (click)=\"prevImage(book.id)\">\n                      Previous\n                    </button>\n                    <button (click)=\"nextImage(book.id)\">\n                      Next\n                    </button>\n                  </div>\n                    <h3>ISBN: {{book.isbn}}</h3>\n                    <h3>Price: ${{book.price}}</h3>\n                    <!--<h5>Seller: {{book.seller}}</h5>-->\n                </mat-card-content>\n                <mat-card-actions *ngIf = \"(book.user_id == userId) == false\">\n                    <mat-label>Quantity</mat-label>\n                    <select [(ngModel)]=\"book.cartQuantity\" matNativeControl required>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                    </select>\n                    <button  (click) = \"addToCart(book.id, book.cartQuantity)\" mat-button>Add to Cart</button>                  \n                </mat-card-actions>\n              </mat-card>\n        </li>\n    </ul>\n    \n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SignupComponent} from 'src/app/signup/signup.component'\nimport {SigninComponent} from 'src/app/signin/signin.component'\nimport { HomeComponent } from './home/home.component'\nimport {AccountInfoComponent} from './account-info/account-info.component'\nimport {AllBooksComponent} from './all-books/all-books.component'\nimport {AddBookComponent} from './add-book/add-book.component'\nimport {UpdateBookComponent} from './manage-books/update-book/update-book.component'\nimport {CartComponent} from './cart/cart.component'\nimport {ManageBooksComponent} from './manage-books/manage-books.component'\nconst routes: Routes = [\n  { path : 'signup', component: SignupComponent},\n  { path : 'signin', component: SigninComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'account', component: AccountInfoComponent},\n  { path: 'books', component: AllBooksComponent},\n  { path: 'books/update/:bookId', component: UpdateBookComponent, pathMatch:'full'},\n  { path: 'cart', component: CartComponent},\n  { path: 'books/manage', component: ManageBooksComponent, pathMatch: 'full'},\n  { path : 'books/add', component: AddBookComponent, pathMatch: 'full'}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n\n\n","<app-menu></app-menu>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\n\n// Angular material imports \nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatButtonModule} from '@angular/material/button'; \nimport {MatIconModule} from '@angular/material/icon';\nimport { AccountInfoComponent } from './account-info/account-info.component'; \nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AddBookComponent } from './add-book/add-book.component'; \nimport {MatDatepickerModule} from '@angular/material/datepicker'; \nimport {MatCardModule} from '@angular/material/card';\nimport {MatSelectModule} from '@angular/material/select'; \nimport {MatMenuModule} from '@angular/material/menu'; \n\nimport { AllBooksComponent } from './all-books/all-books.component';\nimport { ManageBooksComponent } from './manage-books/manage-books.component';\nimport { UpdateBookComponent } from './manage-books/update-book/update-book.component';\nimport { CartComponent } from './cart/cart.component';\n\n\n\n\nconst routes: Routes = [\n  { path : 'signup', component: SignupComponent}, \n  { path: 'signin', component: SigninComponent},\n  { path: 'home', component: HomeComponent}\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    HomeComponent,\n    MenuComponent,\n    AccountInfoComponent,\n    AddBookComponent,\n    AllBooksComponent,\n    ManageBooksComponent,\n    UpdateBookComponent,\n    CartComponent,\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, \n    RouterModule.forRoot(routes),\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatCardModule,\n    MatSelectModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {CartService} from '../services/cart/cart.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\n\n\nexport class CartComponent implements OnInit {\n  cartList = [];\n  deletedItemsList = Array(); \n\n  constructor(private cartService: CartService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.cartService.getCart().subscribe(result => {\n      \n      for (let x in result) {\n        this.cartList.push(result[x])\n        console.log(result[x])\n      }\n      console.log(\"this is the cartlist\", this.cartList);\n    })\n\n    //this.getDeletedItems();\n  }\n\n  removeItem(itemId: string){\n    //alert(`id is ${itemId}`);\n    this.cartService.deleteFromCart(itemId).subscribe(result => {\n      console.log(result);\n      location.reload();\n    })\n  }\n\n  updateItem(event, itemId:string, bookId: string){\n    let newQuantity = event.target.value; \n    alert(`new quantity ${newQuantity}`)\n    this.cartService.updateCart(itemId, bookId, newQuantity).subscribe(result => {\n      console.log(result);\n      location.reload();\n      //this.router.navigate(['/home']);\n    })\n    \n  }\n\n  /*getDeletedItems(){\n    this.cartService.getDeletedItems().subscribe(result => {\n      for (let x in result) {\n        this.deletedItemsList.push(result[x])\n      }\n      console.log(this.deletedItemsList);\n    })\n  }*/ \n\n}\n","<div class=\"container\">\n    <div>\n        <ul>\n            <li *ngFor = \"let ditem of deletedItemsList\">\n                <mat-card>\n                    <mat-card-header>                  \n                      <mat-card-title> Book: {{ditem.title}} was deleted by the user</mat-card-title>\n                    </mat-card-header>\n                    <mat-card-actions>\n                        <button mat-button> Dismiss </button>\n                    </mat-card-actions>\n                  </mat-card>\n            </li>\n        </ul>    \n    </div>\n    \n    \n    <ul>\n        <li *ngFor = \"let item of cartList\" >\n            <mat-card *ngIf = \"!(item.book_id == null); else elseBlock\" class=\"example-card\">\n                <mat-card-header>\n                  <div mat-card-avatar class=\"example-header-image\"></div>\n                  <mat-card-title>{{item.book.title}}</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n\n                    <div class=\"form-group\">\n                        <label for=\"quantity\">Quantity</label>\n                        <input (change)=\"updateItem($event, item.id, item.book_id)\" type=\"number\" min=\"0\" max=\"999\" class=\"form-control\" id=\"quantity\" required\n                               [(ngModel)]=\"item.quantity\" name=\"quantity\">\n                      </div>\n                    <!-- <h3> Quantity: {{item.quantity}}</h3> -->\n                    <h3>Price: ${{item.book.price}}</h3>\n                    <h3> Cost: ${{item.cost}}</h3>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button (click) = \"removeItem(item.id)\" mat-button> Remove </button>\n                </mat-card-actions>\n              </mat-card>\n              <ng-template #elseBlock>\n                <mat-card>\n                    <mat-card-content>\n                        <p> </p>\n                    </mat-card-content>\n                </mat-card>\n              </ng-template>              \n        </li>\n    </ul>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from 'src/app/services/users.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  firstname: string;\n  lastname:string;\n  email:string;\n  oldpassword: string;\n  newpassword: string;\n  renewpassword: string;\n\n  tempfname:string\n  templname:string\n\n  constructor(private userService: UsersService, private router: Router) { }\n\n  ngOnInit(): void {\n    var currentuser = localStorage.getItem(\"user\");\n    this.userService.GetUserInfo(currentuser).subscribe(response => {\n      console.log(response);\n      this.firstname = response[0].firstname;\n      this.lastname = response[0].lastname;\n      this.email = response[0].email;\n\n      // Set the text fields \n      this.tempfname = this.firstname\n      this.templname = this.lastname\n\n    });\n\n  }\n\n  UpdateUserInfo(){\n    if (this.tempfname === '') {\n      alert('please input firstname');\n      return;\n    } else if (this.templname === '') {\n      alert('please input lastname');\n      return;\n    }\n\n    this.userService.UpdateInfo(this.email, this.tempfname, this.templname).subscribe(result => {\n      console.log(result);\n    })\n\n  }\n\n  UpdatePassword(){\n    if (this.oldpassword === ''){\n      alert('please input the password');\n      return;\n    }\n    else if (this.newpassword === '') {\n      \n      alert('please input new password');\n      return;\n    }\n    var passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n    if(!this.newpassword.match(passw)) \n    { \n      alert('Weak password, try another...')\n      return true;\n    }\n\n    console.log(\"sending\", this.oldpassword, \"    -------    \", this.newpassword)\n\n    this.userService.UpdatePassword(this.email, this.oldpassword,this.newpassword).subscribe((res) =>{\n      \n      alert(res);\n    })\n\n\n  }\n\n  logout() {\n    \n    //this.shareInfoClass.logIn = false;\n    sessionStorage.removeItem('user');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    this.router.navigate(['/']);\n    //this.status = 'Login';\n\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\">\n  <mat-tab label=\"Books\"><app-all-books></app-all-books></mat-tab>\n  <mat-tab label=\"Add book\"><app-add-book></app-add-book></mat-tab>\n  <mat-tab label=\"Manage books\"><app-manage-books></app-manage-books></mat-tab>\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\nimport {BooksService} from '../services/books/books.service'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-manage-books',\n  templateUrl: './manage-books.component.html',\n  styleUrls: ['./manage-books.component.scss']\n})\nexport class ManageBooksComponent implements OnInit {\n\n  booksList = Array();\n  userId: string;\n  image:File; \n\n  constructor(private booksService:BooksService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem(\"userId\").toString();\n    //Retrieve a list of all the books \n    this.booksService.getBooks().subscribe(result => {\n      for (let x in result) {\n        var urls = result[x].images.split(';');\n        //urls.pop(); \n        result[x].imageArray = urls;\n        result[x].selectedIndex = 0;  \n        this.booksList.push(result[x])\n      }\n    })\n  }\n\n\n    // Method to create a new book\n    deleteBook(bookId: string){\n      var retVal = confirm(\"Are you sure you want to delete the book?\");\n      if( retVal == true ) {\n        this.booksService.deleteBook(bookId)\n        .subscribe(response => {\n          alert(\"Book deleted\");\n          console.log(\"response from deletion\", response);\n          this.router.navigate(['/books'])          \n        })   \n      }       \n    }\n\n    updateBook(bookId: string){\n      alert(`ID is ${bookId}`)\n    }\n\n    nextImage(id){\n      this.booksList.forEach(book => {\n        if(book.id == id) {\n          if(book.selectedIndex != book.imageArray.length-1)\n          {\n            book.selectedIndex = book.selectedIndex + 1;\n          }\n        }\n      })\n      \n    }\n  \n    prevImage(id){\n      this.booksList.forEach(book => {\n        if(book.id == id) {\n          if(book.selectedIndex != 0)\n          {\n            book.selectedIndex = book.selectedIndex - 1;\n          }\n        }\n      })\n      \n    }\n\n    deleteImage(id){\n      this.booksList.forEach(book => {\n        if(book.id == id) {\n          var imageUrl = book.imageArray[book.selectedIndex];\n          book.imageArray.splice(book.selectedIndex,1);\n          book.selectedIndex = 0;\n\n          var updatedImageString = book.imageArray.join(';')\n          this.booksService.updateBooksImages(id, updatedImageString, imageUrl).subscribe(result=>{\n\n          })\n\n        }\n      })\n    }\n\n    onFileSelect(event){\n      console.log(event.target.files);\n      if (event.target.files.length > 0) {\n        this.image = event.target.files[0];\n        console.log(this.image);\n        //this.uploadForm.get('profile').setValue(file);\n        \n      }\n    }\n\n    addImage(book){\n      if(this.image!=null || this.image!=undefined){\n        const formData = new FormData(); \n        formData.append(\"id\", book.id);\n        formData.append(\"images\", book.images);\n        formData.append(\"image\", this.image);\n\n\n    this.booksService.addImageToBook(formData)\n    .subscribe(response => {\n      alert(\"Book added\");\n      console.log(response);\n      this.router.navigate(['/books']);\n\n    })\n\n      }\n      else {\n        alert(\"No image selected\");\n      }\n    }\n}\n","<div class=\"container\">\n    <ul>\n            <li *ngFor = \"let book of booksList\">\n                <div *ngIf = \"book.user_id == userId\">\n                    <mat-card class=\"example-card\">\n                        <mat-card-header>\n                          <!--<div mat-card-avatar class=\"example-header-image\"></div> -->\n                          <mat-card-title>{{book.title}}</mat-card-title>\n                          <mat-card-subtitle>Author(s): {{book.authors}}</mat-card-subtitle>\n                        </mat-card-header>\n                        \n                        <mat-card-content>\n                          <div class=\"mySlides\">                            \n                            <img src=\"{{book.imageArray[book.selectedIndex]}}\" style=\"width:100%\">     \n                          </div>\n                          <div class=\"scrollPhotos\">\n                            <button (click)=\"prevImage(book.id)\">\n                              Previous\n                            </button>\n                            <button (click)=\"nextImage(book.id)\">\n                              Next\n                            </button>\n                          </div>\n                          <div>\n                            <button (click)=\"deleteImage(book.id)\"class=\"deleteBtn\">Delete image</button>                             \n                            <input type=\"file\"  accept=\"image/png, image/jpeg, image/jpg\" multiple=\"false\" name=\"profile\" (change)=\"onFileSelect($event)\" />\n                            <button (click)=\"addImage(book)\"class=\"btn btn-primary\">Add Image</button>            \n                          </div>                            \n                            <h3>ISBN: {{book.isbn}}</h3>\n                            <h3>Price: ${{book.price}}</h3>\n                            <h3>Quantity: {{book.quantity}}</h3>\n                            <!-- <h3>Created date: {{book.createdDate}}</h3>\n                            <h3>Updated date: {{book.updatedDate}}</h3>           -->\n                        </mat-card-content>\n                        <mat-card-actions>\n                          <a [routerLink]=\"['/books/update/',book.id]\">Update</a>\n                          <!-- <button></button> -->\n                          <!-- <button  (click) = \"updateBook(book.id)\" mat-button>Update</button> -->\n                          <button class=\"deleteBtn\" (click) = \"deleteBook(book.id)\" mat-raised-button color=\"warn\">Delete</button>\n                        </mat-card-actions>\n                      </mat-card>\n                </div>\n                \n            </li>\n    </ul>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {BooksService} from '../../services/books/books.service'\nimport {Books} from '../../models/books'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.scss']\n})\nexport class UpdateBookComponent implements OnInit {\n  \n  id: string\n  book : Books\n  isbn: string\n  title: string\n  authors: string\n  publication_date: string\n  price: number\n  quantity: number\n\n  constructor(private route: ActivatedRoute, private bookService: BooksService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params.bookId; \n    this.bookService.getSpecificBook(this.id).subscribe(result => {\n      console.log(\"received from back\", result);\n      this.book = result;\n      this.isbn = result.isbn\n      this.title = result.title\n      this.authors = result.authors\n      this.publication_date = \"123\"\n      this.price = result.price\n      this.quantity = result.quantity\n\n      console.log(\"Book object now is : \", this.book)\n    })\n  }\n\n  /*updateBook(){\n    this.bookService.updateBook(this.book.isbn, this.book.title, this.book.authors, this.book.price, this.book.quantity, this.id)\n      .subscribe(result => {\n        alert(\"Book updated\");\n        console.log(result);\n        this.router.navigate(['/books/manage']);\n      })\n  }*/ \n  \n  updateBook(){\n    this.bookService.updateBook(this.isbn, this.title, this.authors, this.price, this.quantity, this.id)\n      .subscribe(result => {\n        alert(\"Book updated\");\n        console.log(result);\n        this.router.navigate(['/books/manage']);\n      })\n\n  }\n\n}\n","<div class=\"container\">\n    <h3>Update book</h3>\n    <form (ngSubmit)=\"updateBook()\" #bookForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"isbn\">ISBN</label>\n            <input type=\"text\" class=\"form-control\" id=\"isbn\"\n                   required\n                   [(ngModel)]=\"isbn\" name=\"isbn\">\n          </div><br>\n          \n          <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <input type=\"text\"  class=\"form-control\" id=\"title\"\n                    required\n                   [(ngModel)]=\"title\" name=\"title\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"authors\">Authors</label>\n            <input type=\"text\"  class=\"form-control\" id=\"authors\"\n            required\n                   [(ngModel)]=\"authors\" name=\"authors\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"price\">Price</label>\n            <input type=\"number\" step=\"0.01\" min=\"0.01\" max=\"9999.99\"  class=\"form-control\" id=\"price\"\n            required\n                   [(ngModel)]=\"price\" name=\"price\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"quantity\">Quantity</label>\n            <input type=\"number\" min=\"0\" max=\"999\" class=\"form-control\" id=\"quantity\" required\n                   [(ngModel)]=\"quantity\" name=\"quantity\">\n          </div><br>\n\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!bookForm.form.valid\">Submit</button>\n          \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router} from'@angular/router';\nimport {ShareInfoService} from '../services/ShareInfoService'\nimport {ShareInfoClass} from '../models/ShareInfoClass'\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  loggedIn: boolean\n  constructor(private router:Router, private shareInfoService: ShareInfoService) {\n    if (sessionStorage.getItem('user') === null) {\n      this.loggedIn = false;\n    } else {\n      this.loggedIn = true; \n    }\n   }\n\n  ngOnInit(): void {\n        // Get the username from shareinfoService\n        this.shareInfoService.change.subscribe(value => {\n\n          this.loggedIn = value.loggedIn;\n        });\n  }\n\n  logout() {\n    \n    //this.shareInfoClass.logIn = false;\n    sessionStorage.removeItem('user');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    this.loggedIn = false; \n    this.router.navigate(['/']);\n    //this.status = 'Login';\n\n  }\n\n}\n","<mat-toolbar color=\"accent\">\n\n\n        <button mat-fab color=\"accent\" aria-label=\"Example icon button with a home icon\">\n          <a [routerLink] = \"['/books']\"><mat-icon>home</mat-icon></a>\n        </button>\n    <span>Welcome to Bookstore...!!</span>\n    <span class=\"example-spacer\"></span>\n<div *ngIf = \"loggedIn\">\n  <button mat-raised-button color=\"accent\"  [matMenuTriggerFor]=\"belowMenu\">My Books</button>\n<mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n  <a [routerLink] = \"['/books/add']\"><button mat-menu-item>Add Book</button></a>\n  <a [routerLink] = \"['/books/manage']\"><button mat-menu-item> Manage Books </button></a>\n</mat-menu>\n    <!-- Buyer/Seller buttons -->\n\n    <a [routerLink] = \"['/books']\"><button class=\"btn\" mat-raised-button color=\"accent\"> All Books</button></a>\n    <a [routerLink] = \"['/account']\"><button class=\"btn\" mat-raised-button color=\"accent\">My Account</button></a>\n    <a [routerLink] = \"['/cart']\"><button class=\"btn\" mat-raised-button color=\"accent\">Cart</button></a>\n</div>\n    \n    <div *ngIf = \"!loggedIn\">\n      <a [routerLink] = \"['/signin']\"><button class=\"btn\" mat-raised-button color=\"accent\">Log in</button></a>\n    <a [routerLink] = \"['/signup']\"><button class=\"btn\" mat-raised-button color=\"accent\">Sign up</button></a>\n    </div>\n    <button *ngIf = \"loggedIn\" (click)=\"logout()\" class=\"btn\" mat-raised-button color=\"accent\">Log Out</button>\n    \n</mat-toolbar>\n","// Share Info Class which consist of Login , userName and user Account\nexport class ShareInfoClass{\n    loggedIn : Boolean = false;\n    userName : string;\n    userAccount: string;\n  }\n  ","import { ShareInfoClass } from '../models/ShareInfoClass';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n//  @Injectable() decorator marks it as a service that can be injected, but Angular can't actually inject it anywhere until you configure an Angular dependency injector with a provider of that service\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class ShareInfoService {\n  shareInfo: ShareInfoClass;\n//   logIn : Boolean = false;\n//   userName : string;\n  change : EventEmitter<any>;\n  constructor() {\n    this.change = new EventEmitter();\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BooksService {\n\n  //requestUrl:string='http://localhost:3301';\n  requestUrl:string = \"http://\" + window.location.hostname + \":3301\";\n  //requestUrl:string=process.env.BASE_URL;\n  constructor(private http:HttpClient) { }\n\n\n  addBook(formData: FormData):Observable<any>\n  {\n    const token = localStorage.getItem('token').toString();\n\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.post(this.requestUrl+'/books', formData, httpOptions);\n  }\n/*\n  addBook(isbn:string,title: string, authors:string, price:number, quantity:number):Observable<any>\n  {\n    const userId = localStorage.getItem('userId').toString();\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.post(this.requestUrl+'/books',{\n    isbn, title, authors, price, quantity, userId\n   },httpOptions);\n  }\n*/ \n\n  getBooks(): Observable<any>{\n    return this.http.get(this.requestUrl + '/books')\n  }\n\n  deleteBook(bookId: string) : Observable<any>{\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n    console.log(\"Book id is \", bookId);\n    return this.http.delete(this.requestUrl + '/books/' + bookId, httpOptions);\n  }\n\n  // Get a specific book's record\n  getSpecificBook(id:string) : Observable<any>{\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n    return this.http.get(this.requestUrl + '/books/'+ id, httpOptions);\n  }\n\n  // To update a book\n\n  updateBook(isbn:string,title: string, authors:string, price:number, quantity:number, id:string):Observable<any>\n  {\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.put(this.requestUrl+'/books',{\n    isbn, title, authors, price, quantity, bookId: id\n   },httpOptions);\n  }\n\n  updateBooksImages(id, updatedImageString, imageUrl):Observable<any>{\n        const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n    return this.http.put(this.requestUrl+'/images/update',{\n      id, updatedImageString, imageUrl\n     },httpOptions);\n  }\n\n\n  addImageToBook(formData: FormData):Observable<any>\n  {\n    const token = localStorage.getItem('token').toString();\n\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.post(this.requestUrl+'/images/update', formData, httpOptions);\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  requestUrl:string = \"http://\" + window.location.hostname + \":3301\";\n  //requestUrl:string='http://localhost:3301';\n\n  constructor(private http:HttpClient) { }\n\n\n  addToCart(bookId: string, quantity: number){\n    const userId = localStorage.getItem('userId').toString();\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.post(this.requestUrl+'/cart/'+ userId,{\n    bookId, quantity\n   },httpOptions);\n  }\n\n  getCart(){\n    const userId = localStorage.getItem('userId').toString();\n    return this.http.get(this.requestUrl+ \"/cart/\"+userId)   \n  }\n\n  deleteFromCart(itemId: string){\n    const userId = localStorage.getItem('userId').toString();\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      }),\n      body: {\n        id: itemId\n      }\n    };\n\n    return this .http.delete(this.requestUrl + \"/cart/\"+userId, httpOptions)\n\n  }\n\n  updateCart(itemId: string, bookId: string, newQuantity: number){\n    const userId = localStorage.getItem('userId').toString();\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.put(this.requestUrl+'/cart/'+ userId,{\n    bookId, newQuantity, id:itemId\n   },httpOptions);\n  }\n\n\n  getDeletedItems() {\n    const userId = localStorage.getItem('userId').toString();\n    return this.http.get(this.requestUrl+\"/bufferCart/\"+ userId);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// Stores User Login Account Details and setting up connection from backend\nexport class UsersService {\n\n  requestUrl:string = \"http://\" + window.location.hostname + \":3301\";\n  //requestUrl:string='http://localhost:3301';\n\n  constructor(private http:HttpClient){}\n\n\n  SignIn(email:string,password:string):Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(this.requestUrl+'/users/signin',{\n      email,\n      password\n    });\n  }\n\n\n  SignUp(email:string,firstname: string, lastname:string, password:string,):Observable<any>\n  {\n   const httpOptions = {\n     headers: new HttpHeaders({\n       'Content-Type':  'application/json',\n     })\n   };\n\n   const body = {\n    email,firstname,lastname,password  \n   }\n   \n   console.log(\"sending the request now with body \", body);\n   return this.http.post(this.requestUrl+'/users/signup',body,httpOptions);\n  }\n\n  GetUserInfo(email:string) : Observable<any>{\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n    return this.http.get(this.requestUrl + '/users/' + email, httpOptions);\n  }\n\n  UpdateInfo(email:string, firstname:string, lastname: string) {\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n    \n    \n    return this.http.put(this.requestUrl + '/users/settings/info', {\n      firstname,\n      lastname,\n      email\n    }, httpOptions);\n  }\n\n  UpdatePassword(email:string, oldpassword:string, newpassword: string) {\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n    \n    \n    return this.http.put(this.requestUrl + '/users/settings/password', {\n      email,\n      oldpassword,\n      newpassword\n    }, httpOptions);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from 'src/app/services/users.service'\nimport { Router } from '@angular/router';\nimport {ShareInfoClass} from '../models/ShareInfoClass'\nimport {ShareInfoService} from '../services/ShareInfoService'\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  email: string;\n  password: string; \n  shareInfoClass: ShareInfoClass = new ShareInfoClass;\n\n  constructor(private userService: UsersService, private router: Router, private shareInfoService: ShareInfoService) { }\n\n  ngOnInit(): void {\n    // check if laready signed in \n    var email = localStorage.getItem(\"user\");\n    if (email){\n      this.router.navigate(['/books']);\n    }\n  }\n\n  UserLogin(){\n    if (this.email === '') {\n      alert('please input email');\n      return;\n    } else if (this.password === '') {\n      alert('please input password');\n      return;\n    }\n    \n    this.userService.SignIn(this.email, this.password).subscribe(response => {\n\n        console.log(response);\n        if (response.result === 'Unauthorized') {\n          alert('Invalid password');\n        } else if (response !== null) {\n          //share username and log in status\n          // When running app.js use the below code\n\n          //when running server.js, uncomment the below line\n          //this.user = response.user;\n\n          console.log(this.email + \"logged in \");\n          console.log(response.result);\n          \n          this.shareInfoClass.loggedIn = true;\n          this.shareInfoService.change.emit(this.shareInfoClass);\n\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('userId', response.user.id)\n          //localStorage.setItem('userId', response.result[0].id)\n          localStorage.setItem('user',this.email);\n          sessionStorage.setItem('user', this.email);\n          \n\n          this.router.navigate(['/books']);\n          //this.Authentication = true;\n\n        } else {\n          alert('Invalid password');\n        }\n      }\n    );\n  }\n}\n","<!--login page-->\n<div class=\"background\">\n    <div class=\"container\">\n      <div class=\"row\">\n          \n          <div style=\"width: 30%; margin: 25px auto;\">\n              <form>\n                <h1 class=\"h1\">Log In</h1>\n                <!--  Div class for E-mail -->\n                  <div class=\"form-group\">\n                    <input [(ngModel)]=\"email\" class=\"form-control\" type=\"email\" required name=\"email\" placeholder=\"Enter E-mail\"\n                      required minlength=\"5\" maxlength=\"40\" />\n                  </div><br>\n    \n                  <!-- Div class for password -->\n                  <div class=\"form-group\">\n                    <input [(ngModel)]=\"password\" class=\"form-control\" type=\"password\" required name=\"password\" placeholder=\"Password\">\n                  </div><br>    \n\n                   <!-- Div class for Login Button -->\n              <div class=\"form-group loginBtnClass\">\n                <button class=\"loginButton\" (click)=\"UserLogin()\">Login</button>\n              </div>\n    \n                </form>\n          </div>\n         </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {UsersService} from 'src/app/services/users.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  email: string;\n  firstname: string;\n  lastname: string;\n  password: string;\n  rePassword: string; \n\n  pattern:any=/^[0-9A-Za-z]+(\\.[a-zA-Z0-9_-]+)*@[0-9A-Za-z_]+(\\.[a-zA-Z0-9_-]+)+$/g;\n\n  constructor(private router:Router, private userService:UsersService) { }\n\n  ngOnInit(): void {\n     // check if laready signed in \n     var email = localStorage.getItem(\"user\");\n     if (email){\n\n       this.router.navigate(['/home']);\n     }\n  }\n\n\n  register(){\n    var passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n\n    \n    if(this.email == null){\n      alert(\"Email not entered\");\n    }\n    else if(!this.email.match(this.pattern)){\n      alert(\"Please enter valid email id\");\n    }\n    else if(this.firstname == null){\n      alert(\"don't leave firstname  blank\");\n    }\n    else if(this.password != null && this.password == this.rePassword && this.rePassword!=null){\n\n      if(!this.password.match(passw)) \n    { \n      alert('Weak password, try another...')\n      return true;\n    }\n\n      console.log(\"passwords match\"); \n      // If the passwords match send a post request to the back end \n      this.userService.SignUp(this.email, this.firstname, this.lastname, this.password).subscribe((res)=>\n      {\n        console.log(\"Received from the back end \", res);\n        if(res.status == 400){\n          alert(\"Email already exists!\")\n        }\n        else {\n          alert(\"Account created. You can sign in now\");\n          this.router.navigate(['/signin']);\n        }\n      });\n      \n      \n    }\n    else{\n      alert(\"Invalid input\");\n    }\n  }\n\n}\n","<!--this page is for register-->\n<div class=\"background\">\n    <div class=\"container\">\n      <br>\n      <div class=\"row\">\n          <h1 style=\"text-align: center\">Sign Up</h1>\n          <div style=\"width: 30%; margin: 25px auto;\">\n              <form action=\"/signup\" method=\"post\">\n                <div class=\"form-group\">\n                    <input class=\"form-control\" name=\"email\" required name=\"account\" placeholder=\"Enter e-mail\"\n                    [(ngModel)]=\"email\">\n                </div><br>\n                <div class=\"form-group\">\n                    <input class=\"form-control\" type=\"text\" required name=\"userName\" placeholder=\"Firstname\"\n                    [(ngModel)]=\"firstname\">\n                </div><br>\n                \n                <div class=\"form-group\">\n                    <input class=\"form-control\" type=\"text\" required name=\"lastName\" placeholder=\"Lastname\"\n                    [(ngModel)]=\"lastname\">\n                </div><br>\n\n                <div class=\"form-group\">\n                    <input class=\"form-control\" type=\"password\" required name=\"password\" placeholder=\"Password\"\n                    [(ngModel)]=\"password\">\n                </div><br>\n\n                <div class=\"form-group\">\n                    <input class=\"form-control\" type=\"password\" required name=\"password\" placeholder=\"Confirm Password\"\n                    [(ngModel)]=\"rePassword\">\n                </div><br>\n               \n\n                <div class=\"form-group\">\n                      <button class=\"b\" (click) = \"register()\">Sign Up!</button>\n                </div><br>\n              </form>\n              \n          </div>\n      </div>\n    </div>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}