{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account-info/account-info.component.ts","./src/app/account-info/account-info.component.html","./src/app/add-book/add-book.component.ts","./src/app/add-book/add-book.component.html","./src/app/all-books/all-books.component.ts","./src/app/all-books/all-books.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/forgot-pwd/forgot-pwd.component.ts","./src/app/forgot-pwd/forgot-pwd.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/manage-books/manage-books.component.ts","./src/app/manage-books/manage-books.component.html","./src/app/manage-books/update-book/update-book.component.ts","./src/app/manage-books/update-book/update-book.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/models/ShareInfoClass.ts","./src/app/services/ShareInfoService.ts","./src/app/services/books/books.service.ts","./src/app/services/cart/cart.service.ts","./src/app/services/users.service.ts","./src/app/signin/signin.component.ts","./src/app/signin/signin.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAS3C,MAAM,oBAAoB;IAY/B,YAAoB,WAAyB,EAAU,MAAc;QAAjD,gBAAW,GAAX,WAAW,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE1E,QAAQ;QACN,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC7D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAE5B,uBAAuB;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ;QAEhC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzB,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAChC,OAAO;SACR;aAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YAChC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC;IAEJ,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,EAAC;YAC1B,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACnC,OAAO;SACR;aACI,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,EAAE;YAEhC,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACnC,OAAO;SACR;QACD,IAAI,KAAK,GAAG,yCAAyC,CAAC;QACtD,IAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,EACjC;YACE,KAAK,CAAC,+BAA+B,CAAC;YACtC,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC;QAE7E,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAE/F,KAAK,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CAAC;IAGJ,CAAC;IAED,MAAM;QAEJ,oCAAoC;QACpC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,wBAAwB;IAE1B,CAAC;;wFAlFU,oBAAoB;oGAApB,oBAAoB;QCTjC,yEACE;QAAA,sEACE;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QAAA,gEACrB;QAAA,qEAAI;QAAA,uDAAwB;QAAA,4DAAK;QAAA,gEACjC;QAAA,qEAAI;QAAA,uDAAsB;QAAA,4DAAK;QAAA,iEAC/B;QAAA,sEAAI;QAAA,wDAAgB;QAAA,4DAAK;QAAA,iEAIzB;QAAA,wEACI;QACE,0EACE;QAAA,4EAEF;QAFS,4LAAuB;QAA9B,4DAEF;QAAA,4DAAM;QAAA,iEAEN;QACA,0EACE;QAAA,4EACF;QADS,4LAAuB;QAA9B,4DACF;QAAA,4DAAM;QAAA,iEAEL;QACL,0EACE;QAAA,6EAAkD;QAA3B,6IAAS,oBAAgB,IAAC;QAAC,uEAAW;QAAA,4DAAS;QACxE,4DAAM;QAAA,iEAEJ;QAAA,4DAAO;QACP,wEACE;QACE,0EACE;QAAA,4EAEF;QAFS,8LAAyB;QAAhC,4DAEF;QAAA,4DAAM;QAAA,iEAEN;QACA,0EACE;QAAA,4EACF;QADS,8LAAyB;QAAhC,4DACF;QAAA,4DAAM;QAAA,iEAEL;QACL,0EACE;QAAA,6EAAkD;QAA3B,6IAAS,oBAAgB,IAAC;QAAC,2EAAe;QAAA,4DAAS;QAC5E,4DAAM;QAAA,iEAEJ;QAAA,4DAAO;QACjB,4DAAM;QAEN,iEAOA;QAAA,4DAAM;;QAnDE,0DAAwB;QAAxB,kGAAwB;QACxB,0DAAsB;QAAtB,gGAAsB;QACtB,0DAAgB;QAAhB,0FAAgB;QAOL,0DAAuB;QAAvB,kFAAuB;QAMvB,0DAAuB;QAAvB,kFAAuB;QAYrB,0DAAyB;QAAzB,oFAAyB;QAMzB,0DAAyB;QAAzB,oFAAyB;;6FD3BjC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAW3C,MAAM,gBAAgB;IAU3B,YAAoB,YAA0B,EAAU,MAAa;QAAjD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAE1E,QAAQ;IACR,CAAC;IAGD,8BAA8B;IAC9B,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QAEzD,KAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,EAAC;YAC5B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SAC/B;QAED,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAClC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChD,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEtD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;aAChC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,KAAK,CAAC,YAAY,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QAE1C,CAAC,CAAC;QAEJ;;;;;;cAMM;IACR,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,qCAAqC;YACrC,0BAA0B;YAC1B,gDAAgD;YAChD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;SACrC;IACH,CAAC;;gFA3DU,gBAAgB;gGAAhB,gBAAgB;QCX7B,yEACI;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,6EACI;QADE,4IAAY,gBAAY,IAAC;QAC3B,yEACI;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,2EAGF;QADS,kLAAkB;QAFzB,4DAGF;QAAA,4DAAM;QAAA,gEAEN;QAAA,0EACE;QAAA,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,4EAGF;QADS,oLAAmB;QAF1B,4DAGF;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACE;QAAA,4EAAqB;QAAA,mEAAO;QAAA,4DAAQ;QACpC,4EAGF;QADS,sLAAqB;QAF5B,4DAGF;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACE;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,6EAGF;QADS,oLAAmB;QAF1B,4DAGF;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACE;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,6EAEF;QADS,uLAAsB;QAD7B,4DAEF;QAAA,4DAAM;QAAA,iEACN;QAIA,6EAA+H;QAAlC,gJAAU,wBAAoB,IAAC;QAA5H,4DAA+H;QAAA,iEAE/H;QAAA,8EAAgF;QAAA,kEAAM;QAAA,4DAAS;QAErG,4DAAO;QACX,4DAAM;;;QAtCa,0DAAkB;QAAlB,6EAAkB;QAOlB,0DAAmB;QAAnB,8EAAmB;QAOnB,0DAAqB;QAArB,gFAAqB;QAOrB,0DAAmB;QAAnB,8EAAmB;QAMnB,0DAAsB;QAAtB,iFAAsB;QAQe,0DAAiC;QAAjC,qFAAiC;;6FD/B5E,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;IC0BlC,mFACI;IAAA,4EAAW;IAAA,mEAAQ;IAAA,4DAAY;IAC/B,4EACE;IADM,gYAA+B;IACrC,6EAAkB;IAAA,4DAAC;IAAA,4DAAS;IAC5B,6EAAkB;IAAA,4DAAC;IAAA,4DAAS;IAC5B,6EAAkB;IAAA,4DAAC;IAAA,4DAAS;IAC5B,8EAAkB;IAAA,6DAAC;IAAA,4DAAS;IAC5B,8EAAkB;IAAA,6DAAC;IAAA,4DAAS;IAC9B,4DAAS;IACT,8EAAsE;IAA7D,8cAAiD;IAAY,uEAAW;IAAA,4DAAS;IAC9F,4DAAmB;;;IARP,0DAA+B;IAA/B,yFAA+B;;;;IAzB/C,8EACI;IAAA,kFACC;IACC,iFAAgB;IAAA,uDAAc;IAAA,4DAAiB;IAC/C,oFAAmB;IAAA,uDAA2B;IAAA,4DAAoB;IACpE,4DAAkB;IAClB,mFACE;IAAA,yEACE;IAAA,oEACF;IAAA,4DAAM;IACN,yEACE;IAAA,6EACE;IADM,saAA4B;IAClC,sEACF;IAAA,4DAAS;IACT,6EACE;IADM,saAA4B;IAClC,kEACF;IAAA,4DAAS;IACX,4DAAM;IACJ,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAA2C;IAAA,4DAAK;IAExD,4DAAmB;IACnB,0JACI;IAUN,4DAAW;;;;IA/BS,0DAAc;IAAd,8EAAc;IACX,0DAA2B;IAA3B,oGAA2B;IAIvC,0DAA6C;IAA7C,kLAA6C;IAU9C,0DAAmB;IAAnB,4FAAmB;IACnB,0DAAsB;IAAtB,+FAAsB;IACtB,0DAA2C;IAA3C,oHAA2C;IAGjC,0DAA2C;IAA3C,2GAA2C;;;IAxBrE,qEACI;IAAA,6HACI;IAkCR,4DAAK;;;IAnCS,0DAAuC;IAAvC,gGAAuC;;ADMtD,MAAM,iBAAiB;IAM5B,YAAoB,YAAyB,EAAU,WAAuB;QAA1D,iBAAY,GAAZ,YAAY,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAY;QAJ9E,cAAS,GAAG,KAAK,EAAE,CAAC;IAI8D,CAAC;IAEnF,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACxD,mCAAmC;QACnC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;YAC9C,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;gBACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBAC7B,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACvC,cAAc;gBACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAElB,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC5B,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC;gBAC5B,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;gBAE3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,EAAG,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;QACH,CAAC,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,MAAa,EAAE,IAAW;QAClC,KAAK,CAAC,cAAc,IAAI,mBAAmB,MAAM,EAAE,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,EAAE;QACV,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAG,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE;gBAChB,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,EACjD;oBACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,SAAS,CAAC,EAAE;QACV,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAG,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE;gBAChB,IAAG,IAAI,CAAC,aAAa,IAAI,CAAC,EAC1B;oBACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CAAC;IAEJ,CAAC;;kFA1DU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEACI;QAAA,qEACI;QAAA,2GACI;QAoCR,4DAAK;QAET,4DAAM;;QAvCM,0DAAgC;QAAhC,kFAAgC;;6FDO/B,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACQ;AACA;AACV;AACqB;AACT;AACH;AACsB;AACjC;AACuB;AACN;;;AACpE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAE,+EAAe,EAAC;IAC9C,EAAE,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAE,+EAAe,EAAC;IAC9C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACzC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,yFAAoB,EAAC;IACnD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAiB,EAAC;IAC9C,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,mGAAmB,EAAE,SAAS,EAAC,MAAM,EAAC;IACjF,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACzC,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAoB,EAAE,SAAS,EAAE,MAAM,EAAC;IAC3E,EAAE,IAAI,EAAG,WAAW,EAAE,SAAS,EAAE,6EAAgB,EAAE,SAAS,EAAE,MAAM,EAAC;IACrE,EAAE,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAE,oFAAkB,EAAE,SAAS,EAAE,MAAM,EAAC;IACpE,gEAAgE;CACjE,CAAC;AAOK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,IAAI,CAAC;KACd;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,sEAAqB;QACrB,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACc;AACV;AACuB;AAEZ;AACT;AACa;AACA;AACN;AACA;AACwB;AAG9E,4BAA4B;AAC+B;AACA;AACF;AACJ;AACwB;AACxB;AACY;AACA;AACZ;AACI;AACJ;AAEe;AACS;AACU;AACjC;AACiB;;;AAKvE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAC;IAC9C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAC;IAC7C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;CAC1C,CAAC;AAuCK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAjBJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5B,0DAAW;YACX,qEAAgB;YAChB,6FAAuB;YACvB,yEAAe;YACf,2EAAgB;YAChB,yEAAe;YACf,qEAAa;YACb,qEAAa;YACb,iFAAmB;YACnB,qEAAa;YACb,yEAAe;YACf,qEAAa;SACd;mIAIU,SAAS,mBAlClB,2DAAY;QACZ,wEAAe;QACf,wEAAe;QACf,kEAAa;QACb,mEAAa;QACb,0FAAoB;QACpB,8EAAgB;QAChB,iFAAiB;QACjB,0FAAoB;QACpB,oGAAmB;QACnB,mEAAa;QACb,oFAAkB,aAIlB,uEAAa;QACb,oEAAgB,EAAE,8DAElB,0DAAW;QACX,qEAAgB;QAChB,6FAAuB;QACvB,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,qEAAa;QACb,qEAAa;QACb,iFAAmB;QACnB,qEAAa;QACb,yEAAe;QACf,qEAAa;6FAKJ,SAAS;cApCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,wEAAe;oBACf,kEAAa;oBACb,mEAAa;oBACb,0FAAoB;oBACpB,8EAAgB;oBAChB,iFAAiB;oBACjB,0FAAoB;oBACpB,oGAAmB;oBACnB,mEAAa;oBACb,oFAAkB;iBAEnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;oBAC5B,0DAAW;oBACX,qEAAgB;oBAChB,6FAAuB;oBACvB,yEAAe;oBACf,2EAAgB;oBAChB,yEAAe;oBACf,qEAAa;oBACb,qEAAa;oBACb,iFAAmB;oBACnB,qEAAa;oBACb,yEAAe;oBACf,qEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICGtC,qEACI;IAAA,2EACI;IAAA,kFACE;IAAA,iFAAiB;IAAA,uDAA6C;IAAA,4DAAiB;IACjF,4DAAkB;IAClB,mFACI;IAAA,4EAAoB;IAAA,oEAAQ;IAAA,4DAAS;IACzC,4DAAmB;IACrB,4DAAW;IACjB,4DAAK;;;IANsB,0DAA6C;IAA7C,uHAA6C;;;;IAaxE,8EACI;IAAA,kFACE;IAAA,oEAAwD;IACxD,iFAAgB;IAAA,uDAAmB;IAAA,4DAAiB;IACtD,4DAAkB;IAClB,mFAEI;IAAA,yEACI;IAAA,2EAAsB;IAAA,mEAAQ;IAAA,4DAAQ;IACtC,2EAEF;IAFS,+bAAoD;IAA3D,4DAEF;IAAA,4DAAM;IAER,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAK;IAAA,wDAAoB;IAAA,4DAAK;IAClC,4DAAmB;IACnB,oFACI;IAAA,8EAAoD;IAA5C,kaAA+B;IAAa,oEAAO;IAAA,4DAAS;IACxE,4DAAmB;IACrB,4DAAW;;;IAhBS,0DAAmB;IAAnB,mFAAmB;IAOtB,0DAA2B;IAA3B,qFAA2B;IAGlC,0DAA2B;IAA3B,oGAA2B;IAC1B,0DAAoB;IAApB,8FAAoB;;;IAO7B,2EACI;IAAA,mFACI;IAAA,+DAAQ;IACZ,4DAAmB;IACvB,4DAAW;;;IA1BnB,qEACI;IAAA,yHACI;IAmBF,0MACE;IAMR,4DAAK;;;;IA3BS,0DAAiD;IAAjD,4FAAiD;;ADRhE,MAAM,aAAa;IAIxB,YAAoB,WAAwB,EAAU,MAAa;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAO;QAHnE,aAAQ,GAAG,EAAE,CAAC;QACd,qBAAgB,GAAG,KAAK,EAAE,CAAC;IAE4C,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAE5C,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;gBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACvB;YACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC,CAAC;QAEF,yBAAyB;IAC3B,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,2BAA2B;QAC3B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,KAAK,EAAE,MAAa,EAAE,MAAc;QAC7C,IAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,KAAK,CAAC,gBAAgB,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1E,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,QAAQ,CAAC,MAAM,EAAE,CAAC;YAClB,kCAAkC;QACpC,CAAC,CAAC;IAEJ,CAAC;;0EApCU,aAAa;6FAAb,aAAa;QCX1B,yEACI;QAAA,sEACI;QAAA,qEACI;QAAA,uGACI;QASR,4DAAK;QACT,4DAAM;QAGN,qEACI;QAAA,uGACI;QA4BR,4DAAK;QAET,4DAAM;;QA9CU,0DAAwC;QAAxC,yFAAwC;QAe5C,0DAA+B;QAA/B,iFAA+B;;6FDP9B,aAAa;cAPzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAQ3C,MAAM,kBAAkB;IAE7B,YAAoB,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;IAAI,CAAC;IAElD,QAAQ;IACR,CAAC;IACD,cAAc;QACZ,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;YACrB,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YACtD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAK,CAAC,0BAA0B,CAAC,CAAC;QACpC,CAAC,CAAC;IAGJ,CAAC;;oFAlBU,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,4EACJ;QAAA,4DAAO;QACP,uEACI;QAAA,2EACA;QADoB,qLAAmB;QAAvC,4DACA;QAAA,yEACI;QAAA,4EAAmC;QAA3B,0IAAS,oBAAgB,IAAC;QAAC,iEAAM;QAAA,4DAAS;QACtD,4DAAM;QACN,uEAA8B;QAAA,2EAAgB;QAAA,yEAAa;QAAA,4DAAO;QAAA,4DAAI;QAC1E,4DAAO;QACX,4DAAM;QACV,4DAAM;;QAP0B,0DAAmB;QAAnB,8EAAmB;QAIpC,0DAA0B;QAA1B,6IAA0B;;6FDF5B,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;AAS3C,MAAM,aAAa;IAYxB,YAAoB,WAAyB,EAAU,MAAc;QAAjD,gBAAW,GAAX,WAAW,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE1E,QAAQ;QACN,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC7D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAE/B,uBAAuB;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ;QAEhC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzB,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAChC,OAAO;SACR;aAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YAChC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC;IAEJ,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,EAAC;YAC1B,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACnC,OAAO;SACR;aACI,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,EAAE;YAEhC,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACnC,OAAO;SACR;QACD,IAAI,KAAK,GAAG,yCAAyC,CAAC;QACtD,IAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,EACjC;YACE,KAAK,CAAC,+BAA+B,CAAC;YACtC,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC;QAE7E,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAE/F,KAAK,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CAAC;IAGJ,CAAC;IAED,MAAM;QAEJ,oCAAoC;QACpC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,wBAAwB;IAE1B,CAAC;;0EAjFU,aAAa;6FAAb,aAAa;QCT1B,mFACE;QAAA,6EAAuB;QAAA,2EAA+B;QAAA,4DAAU;QAChE,6EAA0B;QAAA,0EAA6B;QAAA,4DAAU;QACjE,6EAA8B;QAAA,8EAAqC;QAAA,4DAAU;QAC/E,4DAAgB;;6FDKH,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;ICGlC,sEACI;IAAA,8EACI;IAAA,kFACE;IACA,iFAAgB;IAAA,uDAAc;IAAA,4DAAiB;IAC/C,oFAAmB;IAAA,uDAA2B;IAAA,4DAAoB;IACpE,4DAAkB;IAElB,mFACE;IAAA,yEACE;IAAA,oEACF;IAAA,4DAAM;IACN,0EACE;IAAA,6EACE;IADM,iaAA4B;IAClC,sEACF;IAAA,4DAAS;IACT,6EACE;IADM,iaAA4B;IAClC,kEACF;IAAA,4DAAS;IACX,4DAAM;IACN,uEACE;IAAA,6EAAwD;IAAhD,maAA8B;IAAkB,wEAAY;IAAA,4DAAS;IAC7E,4EACA;IAD8F,iVAA+B;IAA7H,4DACA;IAAA,8EAAwD;IAAhD,+ZAAwB;IAAwB,qEAAS;IAAA,4DAAS;IAC5E,4DAAM;IACJ,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAA2C;IAAA,4DAAK;IAGxD,4DAAmB;IACnB,oFACE;IAAA,yEAA6C;IAAA,kEAAM;IAAA,4DAAI;IAGvD,8EAAyF;IAA/D,oaAA+B;IAAgC,kEAAM;IAAA,4DAAS;IAC1G,4DAAmB;IACrB,4DAAW;IACjB,4DAAM;;;IAnCoB,0DAAc;IAAd,8EAAc;IACX,0DAA2B;IAA3B,oGAA2B;IAKvC,0DAA6C;IAA7C,kLAA6C;IAe9C,2DAAmB;IAAnB,4FAAmB;IACnB,0DAAsB;IAAtB,+FAAsB;IACtB,0DAA2B;IAA3B,oGAA2B;IAC3B,0DAA2C;IAA3C,oHAA2C;IAK9C,0DAAyC;IAAzC,yJAAyC;;;IAlC1D,qEACI;IAAA,uHACI;IAwCR,4DAAK;;;;IAzCI,0DAAgC;IAAhC,kGAAgC;;ADM9C,MAAM,oBAAoB;IAM/B,YAAoB,YAAyB,EAAU,MAAc;QAAjD,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJrE,cAAS,GAAG,KAAK,EAAE,CAAC;IAIqD,CAAC;IAE1E,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACxD,mCAAmC;QACnC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9C,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;gBACpB,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACvC,cAAc;gBACd,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC5B,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC;gBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC/B;QACH,CAAC,CAAC;IACJ,CAAC;IAGC,8BAA8B;IAC9B,UAAU,CAAC,MAAc;QACvB,IAAI,MAAM,GAAG,OAAO,CAAC,2CAA2C,CAAC,CAAC;QAClE,IAAI,MAAM,IAAI,IAAI,EAAG;YACnB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC;iBACnC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpB,KAAK,CAAC,cAAc,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;gBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC,CAAC;SACH;IACH,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,KAAK,CAAC,SAAS,MAAM,EAAE,CAAC;IAC1B,CAAC;IAED,SAAS,CAAC,EAAE;QACV,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAG,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE;gBAChB,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,EACjD;oBACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,SAAS,CAAC,EAAE;QACV,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAG,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE;gBAChB,IAAG,IAAI,CAAC,aAAa,IAAI,CAAC,EAC1B;oBACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAG,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE;gBAChB,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBAEvB,IAAI,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;gBAClD,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,EAAE,kBAAkB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,GAAE;gBAExF,CAAC,CAAC;aAEH;QACH,CAAC,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,gDAAgD;SAEjD;IACH,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAG,IAAI,CAAC,KAAK,IAAE,IAAI,IAAI,IAAI,CAAC,KAAK,IAAE,SAAS,EAAC;YAC3C,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YAC/B,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACvC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAGzC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC;iBACzC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpB,KAAK,CAAC,YAAY,CAAC,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEnC,CAAC,CAAC;SAEC;aACI;YACH,KAAK,CAAC,mBAAmB,CAAC,CAAC;SAC5B;IACH,CAAC;;wFA9GQ,oBAAoB;oGAApB,oBAAoB;QCTjC,yEACI;QAAA,qEACQ;QAAA,8GACI;QA0CZ,4DAAK;QAET,4DAAM;;QA7CU,0DAAgC;QAAhC,kFAAgC;;6FDOnC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAW3C,MAAM,mBAAmB;IAW9B,YAAoB,KAAqB,EAAU,WAAyB,EAAU,MAAa;QAA/E,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAc;QAAU,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAExG,QAAQ;QACN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC3D,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;YACvB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK;YACzB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;YAC7B,IAAI,CAAC,gBAAgB,GAAG,KAAK;YAC7B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK;YACzB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ;YAE/B,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IAEH,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC;aACjG,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,KAAK,CAAC,cAAc,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC;IAEN,CAAC;;sFA9CU,mBAAmB;mGAAnB,mBAAmB;QCXhC,yEACI;QAAA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,6EACI;QADE,+IAAY,gBAAY,IAAC;QAC3B,yEACI;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,2EAGF;QADS,qLAAkB;QAFzB,4DAGF;QAAA,4DAAM;QAAA,gEAEN;QAAA,0EACE;QAAA,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,4EAGF;QADS,uLAAmB;QAF1B,4DAGF;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACE;QAAA,4EAAqB;QAAA,mEAAO;QAAA,4DAAQ;QACpC,4EAGF;QADS,yLAAqB;QAF5B,4DAGF;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACE;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,6EAGF;QADS,uLAAmB;QAF1B,4DAGF;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACE;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,6EAEF;QADS,0LAAsB;QAD7B,4DAEF;QAAA,4DAAM;QAAA,iEAEN;QAAA,8EAAgF;QAAA,kEAAM;QAAA,4DAAS;QAErG,4DAAO;QACX,4DAAM;;;QAjCa,0DAAkB;QAAlB,6EAAkB;QAOlB,0DAAmB;QAAnB,8EAAmB;QAOnB,0DAAqB;QAArB,gFAAqB;QAOrB,0DAAmB;QAAnB,8EAAmB;QAMnB,0DAAsB;QAAtB,iFAAsB;QAGe,0DAAiC;QAAjC,qFAAiC;;6FD1B5E,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;;;ICQlD,sEACE;IAAA,4EAA0E;IAAA,mEAAQ;IAAA,4DAAS;IAC7F,iFACE;IAAA,uEAAmC;IAAA,4EAAsB;IAAA,mEAAQ;IAAA,4DAAS;IAAA,4DAAI;IAC9E,uEAAsC;IAAA,4EAAuB;IAAA,0EAAa;IAAA,4DAAS;IAAA,4DAAI;IACzF,4DAAW;IAGP,wEAA+B;IAAA,8EAAsD;IAAA,sEAAS;IAAA,4DAAS;IAAA,4DAAI;IAC3G,wEAAiC;IAAA,8EAAqD;IAAA,sEAAU;IAAA,4DAAS;IAAA,4DAAI;IAC7G,wEAA8B;IAAA,8EAAqD;IAAA,gEAAI;IAAA,4DAAS;IAAA,4DAAI;IACxG,4DAAM;;;IAVsC,0DAA+B;IAA/B,kFAA+B;IAEtE,0DAA+B;IAA/B,6IAA+B;IAC/B,0DAAkC;IAAlC,6IAAkC;IAIhC,0DAA2B;IAA3B,6IAA2B;IAC3B,0DAA6B;IAA7B,6IAA6B;IAC7B,0DAA0B;IAA1B,8IAA0B;;;;;IAG7B,sEACE;IAAA,uEAAgC;IAAA,6EAAqD;IAAA,iEAAM;IAAA,4DAAS;IAAA,4DAAI;IAC1G,uEAAgC;IAAA,6EAAqD;IAAA,kEAAO;IAAA,4DAAS;IAAA,4DAAI;IACzG,4DAAM;;IAFD,0DAA4B;IAA5B,6IAA4B;IAC9B,0DAA4B;IAA5B,6IAA4B;;;;IAE/B,6EAA2F;IAAhE,iTAAkB;IAA8C,kEAAO;IAAA,4DAAS;;ADfxG,MAAM,aAAa;IAGxB,YAAoB,MAAa,EAAU,gBAAkC;QAAzD,WAAM,GAAN,MAAM,CAAO;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAC3E,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;YAC3C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACF,CAAC;IAEF,QAAQ;QACF,yCAAyC;QACzC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAE7C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QACjC,CAAC,CAAC,CAAC;IACT,CAAC;IAED,MAAM;QAEJ,oCAAoC;QACpC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,wBAAwB;IAE1B,CAAC;;0EA9BU,aAAa;6FAAb,aAAa;QCV1B,iFAGQ;QAAA,uEAES;QACb,uEAAM;QAAA,oFAAyB;QAAA,4DAAO;QACtC,qEAAoC;QACxC,2GACE;QAYE,yGACE;QAGF,+GAA2F;QAE/F,4DAAc;;QAnBT,0DAAkB;QAAlB,8EAAkB;QAad,0DAAmB;QAAnB,+EAAmB;QAIhB,0DAAkB;QAAlB,8EAAkB;;6FDfjB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA,sEAAsE;AAC/D,MAAM,cAAc;IAA3B;QACI,aAAQ,GAAa,KAAK,CAAC;IAG7B,CAAC;CAAA;;;;;;;;;;;;;ACJH;AAAA;AAAA;AAAyD;;AAEzD,wMAAwM;AAMjM,MAAM,gBAAgB;IAK3B;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;IAClC,CAAC;;gFAPS,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAJf,MAAM;6FAIP,gBAAgB;cAL5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2C;AACgC;;;AAOpE,MAAM,YAAY;IAIvB,yCAAyC;IACzC,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAHnC,4CAA4C;QAC5C,eAAU,GAAU,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC;IAE7B,CAAC;IAGxC,OAAO,CAAC,QAAkB;QAExB,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QAEvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IACxE,CAAC;IACH;;;;;;;;;;;;;;;;;MAiBE;IAEA,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;IAClD,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,MAAM,EAAE,WAAW,CAAC,CAAC;IAC7E,CAAC;IAED,+BAA+B;IAC/B,eAAe,CAAC,EAAS;QACvB,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,SAAS,GAAE,EAAE,EAAE,WAAW,CAAC,CAAC;IACrE,CAAC;IAED,mBAAmB;IAEnB,UAAU,CAAC,IAAW,EAAC,KAAa,EAAE,OAAc,EAAE,KAAY,EAAE,QAAe,EAAE,EAAS;QAE5F,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAC,QAAQ,EAAC;YAC7C,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE;SACjD,EAAC,WAAW,CAAC,CAAC;IAChB,CAAC;IAED,iBAAiB,CAAC,EAAE,EAAE,kBAAkB,EAAE,QAAQ;QAC5C,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC3D,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAC,gBAAgB,EAAC;YACpD,EAAE,EAAE,kBAAkB,EAAE,QAAQ;SAChC,EAAC,WAAW,CAAC,CAAC;IAClB,CAAC;IAGD,cAAc,CAAC,QAAkB;QAE/B,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QAEvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAC,gBAAgB,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IAChF,CAAC;;wEAtHU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAHX,MAAM;6FAGP,YAAY;cAJxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2C;AACgC;;;AAMpE,MAAM,WAAW;IAGtB,4CAA4C;IAE5C,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAHnC,eAAU,GAAU,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC;IAG7B,CAAC;IAGxC,SAAS,CAAC,MAAc,EAAE,QAAgB;QACxC,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzD,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAC,QAAQ,GAAE,MAAM,EAAC;YACtD,MAAM,EAAE,QAAQ;SAChB,EAAC,WAAW,CAAC,CAAC;IAChB,CAAC;IAED,OAAO;QACL,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAE,QAAQ,GAAC,MAAM,CAAC;IACxD,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzD,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;YACF,IAAI,EAAE;gBACJ,EAAE,EAAE,MAAM;aACX;SACF,CAAC;QAEF,OAAO,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAC,MAAM,EAAE,WAAW,CAAC;IAE1E,CAAC;IAED,UAAU,CAAC,MAAc,EAAE,MAAc,EAAE,WAAmB;QAC5D,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzD,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAC,QAAQ,GAAE,MAAM,EAAC;YACrD,MAAM,EAAE,WAAW,EAAE,EAAE,EAAC,MAAM;SAC9B,EAAC,WAAW,CAAC,CAAC;IAChB,CAAC;IAGD,eAAe;QACb,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAC,cAAc,GAAE,MAAM,CAAC,CAAC;IAC/D,CAAC;;sEAnEU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2C;AACgC;;;AAQ3E,2EAA2E;AACpE,MAAM,YAAY;IAGvB,4CAA4C;IAE5C,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAHnC,eAAU,GAAU,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC;IAG/B,CAAC;IAGtC,MAAM,CAAC,KAAY,EAAC,QAAe;QAEjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAC,eAAe,EAAC;YACpD,KAAK;YACL,QAAQ;SACT,CAAC,CAAC;IACL,CAAC;IAGD,MAAM,CAAC,KAAY,EAAC,SAAiB,EAAE,QAAe,EAAE,QAAe;QAEtE,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;aACpC,CAAC;SACH,CAAC;QAEF,MAAM,IAAI,GAAG;YACZ,KAAK,EAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ;SACjC;QAED,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAC,eAAe,EAAC,IAAI,EAAC,WAAW,CAAC,CAAC;IACzE,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,eAAe,GAAG,KAAK,EAAE,WAAW,CAAC,CAAC;IAC/E,CAAC;IAED,UAAU,CAAC,KAAY,EAAE,SAAgB,EAAE,QAAgB;QACzD,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QAIF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,sBAAsB,EAAE;YAC7D,SAAS;YACT,QAAQ;YACR,KAAK;SACN,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,cAAc,CAAC,KAAY,EAAE,WAAkB,EAAE,WAAmB;QAClE,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvD,6CAA6C;QAC7C,MAAM,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,MAAM;aACxB,CAAC;SACH,CAAC;QAIF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,0BAA0B,EAAE;YACjE,KAAK;YACL,WAAW;YACX,WAAW;SACZ,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAEH,yBAAyB;IACzB,MAAM,CAAC,KAAY;QAEjB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAC,cAAc,EAAC;YACnD,KAAK;SACN,CAAC,CAAC;IACL,CAAC;;wEAnGY,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAJX,MAAM;6FAIP,YAAY;cALxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGK;;;;;;;AAQhD,MAAM,eAAe;IAM1B,YAAoB,WAAyB,EAAU,MAAc,EAAU,gBAAkC;QAA7F,gBAAW,GAAX,WAAW,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAFjH,mBAAc,GAAmB,IAAI,qEAAc,CAAC;IAEiE,CAAC;IAEtH,QAAQ;QACN,8BAA8B;QAC9B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,KAAK,EAAC;YACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SAClC;IACH,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;YACrB,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAC5B,OAAO;SACR;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC/B,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAEpE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,QAAQ,CAAC,MAAM,KAAK,cAAc,EAAE;gBACtC,KAAK,CAAC,kBAAkB,CAAC,CAAC;aAC3B;iBAAM,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC5B,kCAAkC;gBAClC,yCAAyC;gBAEzC,kDAAkD;gBAClD,4BAA4B;gBAE5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC;gBACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAE7B,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACpC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEvD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC9C,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBAChD,uDAAuD;gBACvD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxC,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAG3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,6BAA6B;aAE9B;iBAAM;gBACL,KAAK,CAAC,kBAAkB,CAAC,CAAC;aAC3B;QACH,CAAC,CACF,CAAC;IACJ,CAAC;;8EA1DU,eAAe;+FAAf,eAAe;QCV5B,yEACI;QAAA,yEACE;QAAA,yEAEI;QAAA,yEACI;QAAA,uEACE;QAAA,wEAAe;QAAA,iEAAM;QAAA,4DAAK;QAExB,yEACE;QAAA,2EAEF;QAFS,kLAAmB;QAA1B,4DAEF;QAAA,4DAAM;QAAA,gEAEN;QACA,0EACE;QAAA,4EACF;QADS,sLAAsB;QAA7B,4DACF;QAAA,4DAAM;QAAA,iEACN;QAAA,0EACE;QAAA,wEACE;QAAA,8EACF;QAAA,4DAAI;QACN,4DAAM;QAEV,2EACE;QAAA,8EAAkD;QAAtB,wIAAS,eAAW,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAClE,4DAAM;QAEJ,4DAAO;QACb,4DAAM;QACP,4DAAM;QACP,4DAAM;QACV,4DAAM;;QAtBiB,0DAAmB;QAAnB,8EAAmB;QAMnB,0DAAsB;QAAtB,iFAAsB;QAG1B,0DAA4B;QAA5B,6IAA4B;;6FDRtC,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAU3C,MAAM,eAAe;IAU1B,YAAoB,MAAa,EAAU,WAAwB;QAA/C,WAAM,GAAN,MAAM,CAAO;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFnE,YAAO,GAAK,qEAAqE,CAAC;IAEX,CAAC;IAExE,QAAQ;QACL,8BAA8B;QAC9B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,KAAK,EAAC;YAER,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;IACJ,CAAC;IAGD,QAAQ;QACN,IAAI,KAAK,GAAG,yCAAyC,CAAC;QAGtD,IAAG,IAAI,CAAC,KAAK,IAAI,IAAI,EAAC;YACpB,KAAK,CAAC,mBAAmB,CAAC,CAAC;SAC5B;aACI,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;YACtC,KAAK,CAAC,6BAA6B,CAAC,CAAC;SACtC;aACI,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAC;YAC7B,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACvC;aACI,IAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAE,IAAI,EAAC;YAEzF,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAChC;gBACE,KAAK,CAAC,+BAA+B,CAAC;gBACtC,OAAO,IAAI,CAAC;aACb;YAEC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,8DAA8D;YAC9D,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAEjG,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;gBAChD,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;oBACnB,KAAK,CAAC,uBAAuB,CAAC;iBAC/B;qBACI;oBACH,KAAK,CAAC,sCAAsC,CAAC,CAAC;oBAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;iBACnC;YACH,CAAC,CAAC,CAAC;SAGJ;aACG;YACF,KAAK,CAAC,eAAe,CAAC,CAAC;SACxB;IACH,CAAC;;8EA9DU,eAAe;+FAAf,eAAe;QCT5B,yEACI;QAAA,yEACE;QAAA,gEACA;QAAA,yEACI;QAAA,wEAA+B;QAAA,kEAAO;QAAA,4DAAK;QAC3C,yEACI;QAAA,0EACE;QAAA,yEACI;QAAA,2EAEJ;QADI,kLAAmB;QADnB,4DAEJ;QAAA,4DAAM;QAAA,iEACN;QAAA,0EACI;QAAA,4EAEJ;QADI,uLAAuB;QADvB,4DAEJ;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACI;QAAA,4EAEJ;QADI,sLAAsB;QADtB,4DAEJ;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACI;QAAA,6EAEJ;QADI,sLAAsB;QADtB,4DAEJ;QAAA,4DAAM;QAAA,iEAEN;QAAA,0EACI;QAAA,6EAEJ;QADI,wLAAwB;QADxB,4DAEJ;QAAA,4DAAM;QAAA,iEAGN;QAAA,0EACM;QAAA,8EAAyC;QAAvB,wIAAW,cAAU,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAChE,4DAAM;QAAA,iEACR;QAAA,4DAAO;QAEX,4DAAM;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA/BY,0DAAmB;QAAnB,8EAAmB;QAInB,0DAAuB;QAAvB,kFAAuB;QAKvB,0DAAsB;QAAtB,iFAAsB;QAKtB,0DAAsB;QAAtB,iFAAsB;QAKtB,0DAAwB;QAAxB,mFAAwB;;6FDnB/B,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from 'src/app/services/users.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account-info',\n  templateUrl: './account-info.component.html',\n  styleUrls: ['./account-info.component.scss']\n})\nexport class AccountInfoComponent implements OnInit {\n\n  firstname: string;\n  lastname:string;\n  email:string;\n  oldpassword: string;\n  newpassword: string;\n  renewpassword: string;\n\n  tempfname:string\n  templname:string\n\n  constructor(private userService: UsersService, private router: Router) { }\n\n  ngOnInit(): void {\n    var currentuser = localStorage.getItem(\"user\");\n    this.userService.GetUserInfo(currentuser).subscribe(response => {\n      console.log(response);\n      this.firstname = response.firstname;\n      this.lastname = response.lastname;\n      this.email = response.email;\n\n      // Set the text fields \n      this.tempfname = this.firstname\n      this.templname = this.lastname\n\n    });\n\n  }\n\n  UpdateUserInfo(){\n    if (this.tempfname === '') {\n      alert('please input firstname');\n      return;\n    } else if (this.templname === '') {\n      alert('please input lastname');\n      return;\n    }\n\n    this.userService.UpdateInfo(this.email, this.tempfname, this.templname).subscribe(result => {\n      console.log(result);\n    })\n\n  }\n\n  UpdatePassword(){\n    if (this.oldpassword === ''){\n      alert('please input the password');\n      return;\n    }\n    else if (this.newpassword === '') {\n      \n      alert('please input new password');\n      return;\n    }\n    var passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n    if(!this.newpassword.match(passw)) \n    { \n      alert('Weak password, try another...')\n      return true;\n    }\n\n    console.log(\"sending\", this.oldpassword, \"    -------    \", this.newpassword)\n\n    this.userService.UpdatePassword(this.email, this.oldpassword,this.newpassword).subscribe((res) =>{\n      \n      alert(res);\n    })\n\n\n  }\n\n  logout() {\n    \n    //this.shareInfoClass.logIn = false;\n    sessionStorage.removeItem('user');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    this.router.navigate(['/']);\n    //this.status = 'Login';\n\n  }\n\n}\n","<div class=\"accountContainer\">\n  <div>\n    <h1>Account Info</h1><br>\n    <h2>Firstname: {{firstname}}</h2><br>\n    <h2>Lastname: {{lastname}}</h2><br>\n    <h2>Email: {{email}}</h2><br>\n\n\n\n    <form>\n        <!--  Div class for firstname -->\n          <div class=\"form-group\">\n            <input [(ngModel)]=\"tempfname\" class=\"form-control\" type=\"text\" required name=\"firstname\" placeholder=\"Enter firstname\"\n              required minlength=\"5\" maxlength=\"40\" />\n          </div><br>\n\n          <!-- Div class for lastname -->\n          <div class=\"form-group\">\n            <input [(ngModel)]=\"templname\" class=\"form-control\" type=\"text\" required name=\"lastname\" placeholder=\"Enter lastname\">\n          </div><br>    \n\n           <!-- Div class for Login Button -->\n      <div class=\"form-group\">\n        <button class=\"button\" (click)=\"UpdateUserInfo()\">Update Info</button>\n      </div><br>\n\n        </form>\n        <form>\n          <!--  Div class for firstname -->\n            <div class=\"form-group\">\n              <input [(ngModel)]=\"oldpassword\" class=\"form-control\" type=\"password\" required name=\"oldpassword\" placeholder=\"Enter current password\"\n                required minlength=\"5\" maxlength=\"40\" />\n            </div><br>\n  \n            <!-- Div class for lastname -->\n            <div class=\"form-group\">\n              <input [(ngModel)]=\"newpassword\" class=\"form-control\" type=\"password\" required name=\"newpassword\" placeholder=\"Enter new password\">\n            </div><br>\n  \n             <!-- Div class for Login Button -->\n        <div class=\"form-group\">\n          <button class=\"button\" (click)=\"UpdatePassword()\">Update Password</button>\n        </div><br>\n  \n          </form>\n</div>\n\n<br>\n\n\n\n        \n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Books} from '../models/books'\nimport {FormControl, Validators} from '@angular/forms';\nimport {BooksService} from '../services/books/books.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.scss']\n})\nexport class AddBookComponent implements OnInit {\n\n  public isbn: string;\n  public title: string;\n  public authors: string;\n  public price: number;\n  public quantity: number;\n  public image: File;\n  public allImages: []; \n\n  constructor(private booksService: BooksService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  // Method to create a new book\n  submitBook(){\n    const formData = new FormData();\n    const userId = localStorage.getItem('userId').toString();\n\n    for(let img of this.allImages){\n      formData.append('image', img);\n    }\n    \n    formData.append(\"userId\", userId);\n    formData.append('isbn', this.isbn);\n    formData.append('title', this.title);\n    formData.append('authors', this.authors);\n    formData.append('price', this.price.toString());\n    formData.append('quantity', this.quantity.toString());\n\n    console.log(formData);\n\n    this.booksService.addBook(formData)\n      .subscribe(response => {\n        alert(\"Book added\");\n        console.log(response);\n        this.router.navigate(['/books/manage']);\n\n      })\n\n    /*this.booksService.addBook(this.isbn, this.title, this.authors, this.price, this.quantity)\n      .subscribe(response => {\n        alert(\"Book added\");\n        console.log(response);\n        this.router.navigate(['/books/manage']);\n\n      })*/ \n  }\n\n  onFileSelect(event){\n    console.log(event.target.files);\n    if (event.target.files.length > 0) {\n      //this.image = event.target.files[0];\n      //console.log(this.image);\n      //this.uploadForm.get('profile').setValue(file);\n      this.allImages = event.target.files; \n    }\n  }\n\n}\n","<div class=\"container\">\n    <h3>Add a new book</h3>\n    <form (ngSubmit)=\"submitBook()\" #bookForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"isbn\">ISBN</label>\n            <input type=\"text\" class=\"form-control\" id=\"isbn\"\n                   required\n                   [(ngModel)]=\"isbn\" name=\"isbn\">\n          </div><br>\n          \n          <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <input type=\"text\"  class=\"form-control\" id=\"title\"\n                    required\n                   [(ngModel)]=\"title\" name=\"title\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"authors\">Authors</label>\n            <input type=\"text\"  class=\"form-control\" id=\"authors\"\n            required\n                   [(ngModel)]=\"authors\" name=\"authors\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"price\">Price</label>\n            <input type=\"number\" step=\"0.01\" min=\"0.01\" max=\"9999.99\"  class=\"form-control\" id=\"price\"\n            required\n                   [(ngModel)]=\"price\" name=\"price\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"quantity\">Quantity</label>\n            <input type=\"number\" min=\"0\" max=\"999\" class=\"form-control\" id=\"quantity\" required\n                   [(ngModel)]=\"quantity\" name=\"quantity\">\n          </div><br>\n          <!-- <div class=\"form-group\">\n            <label for=\"quantity\">Upload Image</label>\n            <input #image id=\"imageInput\" class=\"inputfile\" type=\"file\" accept=\"image/*\" (change)=\"fileChangeEvent($event)\"/>\n          </div> -->\n          <input type=\"file\"  accept=\"image/png, image/jpeg, image/jpg\" multiple=\"true\" name=\"profile\" (change)=\"onFileSelect($event)\" /><br>\n\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!bookForm.form.valid\">Submit</button>\n          \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {BooksService} from '../services/books/books.service'\nimport {CartService} from '../services/cart/cart.service'\nimport { element } from 'protractor';\n@Component({\n  selector: 'app-all-books',\n  templateUrl: './all-books.component.html',\n  styleUrls: ['./all-books.component.scss']\n})\nexport class AllBooksComponent implements OnInit {\n\n  booksList = Array();\n  userId: string;\n  selectedQuantity: number; \n\n  constructor(private booksService:BooksService, private cartService:CartService) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem(\"userId\").toString();\n    //Retrieve a list of all the books \n    this.booksService.getBooks().subscribe(result => {\n      console.log(\"received from getBooks\", result);\n      for (let x in result) {\n        console.log(result[x].images)\n        var urls = result[x].images.split(';');\n        //urls.pop(); \n        console.log(urls);\n        \n        result[x].imageArray = urls;\n        result[x].selectedIndex = 0;  \n        result[x].cartQuantity = 1; \n        \n        this.booksList.push(result[x])\n        console.log(result[x].cartQuantity , typeof result[x]);\n      }\n    })\n  }\n\n  addToCart(bookId:string, quan:number){\n    alert(`Quantity : ${quan} and book id is ${bookId}`)\n    this.cartService.addToCart(bookId, quan).subscribe(result => {\n      console.log(result);\n    })\n  }\n\n  nextImage(id){\n    this.booksList.forEach(book => {\n      if(book.id == id) {\n        if(book.selectedIndex != book.imageArray.length-1)\n        {\n          book.selectedIndex = book.selectedIndex + 1;\n        }\n      }\n    })\n    \n  }\n\n  prevImage(id){\n    this.booksList.forEach(book => {\n      if(book.id == id) {\n        if(book.selectedIndex != 0)\n        {\n          book.selectedIndex = book.selectedIndex - 1;\n        }\n      }\n    })\n    \n  }\n\n}\n","<div class=\"container\">\n    <ul>\n        <li *ngFor = \"let book of booksList\" >\n            <mat-card *ngIf = \"(book.quantity == 0) == false\" class=\"example-card\">\n                <mat-card-header>\n                 <!-- <div mat-card-avatar class=\"example-header-image\"></div>-->\n                  <mat-card-title>{{book.title}}</mat-card-title>\n                  <mat-card-subtitle>Author(s): {{book.authors}}</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                  <div class=\"mySlides\">                \n                    <img src=\"{{book.imageArray[book.selectedIndex]}}\" style=\"width:100%\">                    \n                  </div>\n                  <div class=\"scrollPhotos\">\n                    <button (click)=\"prevImage(book.id)\">\n                      Previous\n                    </button>\n                    <button (click)=\"nextImage(book.id)\">\n                      Next\n                    </button>\n                  </div>\n                    <h3>ISBN: {{book.isbn}}</h3>\n                    <h3>Price: ${{book.price}}</h3>\n                    <h3>Publication Date: {{book.publication_date}}</h3>\n                    <!--<h5>Seller: {{book.seller}}</h5>-->\n                </mat-card-content>\n                <mat-card-actions *ngIf = \"(book.user_id == userId) == false\">\n                    <mat-label>Quantity</mat-label>\n                    <select [(ngModel)]=\"book.cartQuantity\" matNativeControl required>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                    </select>\n                    <button  (click) = \"addToCart(book.id, book.cartQuantity)\" mat-button>Add to Cart</button>                  \n                </mat-card-actions>\n              </mat-card>\n        </li>\n    </ul>\n    \n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SignupComponent} from 'src/app/signup/signup.component'\nimport {SigninComponent} from 'src/app/signin/signin.component'\nimport { HomeComponent } from './home/home.component'\nimport {AccountInfoComponent} from './account-info/account-info.component'\nimport {AllBooksComponent} from './all-books/all-books.component'\nimport {AddBookComponent} from './add-book/add-book.component'\nimport {UpdateBookComponent} from './manage-books/update-book/update-book.component'\nimport {CartComponent} from './cart/cart.component'\nimport {ManageBooksComponent} from './manage-books/manage-books.component'\nimport {ForgotPwdComponent} from './forgot-pwd/forgot-pwd.component'\nconst routes: Routes = [\n  { path : 'signup', component: SignupComponent},\n  { path : 'signin', component: SigninComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'account', component: AccountInfoComponent},\n  { path: 'books', component: AllBooksComponent},\n  { path: 'books/update/:bookId', component: UpdateBookComponent, pathMatch:'full'},\n  { path: 'cart', component: CartComponent},\n  { path: 'books/manage', component: ManageBooksComponent, pathMatch: 'full'},\n  { path : 'books/add', component: AddBookComponent, pathMatch: 'full'},\n  { path : 'forgot', component: ForgotPwdComponent, pathMatch: 'full'}\n  //{ path : '', component: LandingComponent, pathMatch: 'full'}  \n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n\n\n","<app-menu></app-menu>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\n\n// Angular material imports \nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatButtonModule} from '@angular/material/button'; \nimport {MatIconModule} from '@angular/material/icon';\nimport { AccountInfoComponent } from './account-info/account-info.component'; \nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AddBookComponent } from './add-book/add-book.component'; \nimport {MatDatepickerModule} from '@angular/material/datepicker'; \nimport {MatCardModule} from '@angular/material/card';\nimport {MatSelectModule} from '@angular/material/select'; \nimport {MatMenuModule} from '@angular/material/menu'; \n\nimport { AllBooksComponent } from './all-books/all-books.component';\nimport { ManageBooksComponent } from './manage-books/manage-books.component';\nimport { UpdateBookComponent } from './manage-books/update-book/update-book.component';\nimport { CartComponent } from './cart/cart.component';\nimport { ForgotPwdComponent } from './forgot-pwd/forgot-pwd.component';\n\n\n\n\nconst routes: Routes = [\n  { path : 'signup', component: SignupComponent}, \n  { path: 'signin', component: SigninComponent},\n  { path: 'home', component: HomeComponent}\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    HomeComponent,\n    MenuComponent,\n    AccountInfoComponent,\n    AddBookComponent,\n    AllBooksComponent,\n    ManageBooksComponent,\n    UpdateBookComponent,\n    CartComponent,\n    ForgotPwdComponent,\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, \n    RouterModule.forRoot(routes),\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatCardModule,\n    MatSelectModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {CartService} from '../services/cart/cart.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\n\n\nexport class CartComponent implements OnInit {\n  cartList = [];\n  deletedItemsList = Array(); \n\n  constructor(private cartService: CartService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.cartService.getCart().subscribe(result => {\n      \n      for (let x in result) {\n        this.cartList.push(result[x])\n        console.log(result[x])\n      }\n      console.log(\"this is the cartlist\", this.cartList);\n    })\n\n    //this.getDeletedItems();\n  }\n\n  removeItem(itemId: string){\n    //alert(`id is ${itemId}`);\n    this.cartService.deleteFromCart(itemId).subscribe(result => {\n      console.log(result);\n      location.reload();\n    })\n  }\n\n  updateItem(event, itemId:string, bookId: string){\n    let newQuantity = event.target.value; \n    alert(`new quantity ${newQuantity}`)\n    this.cartService.updateCart(itemId, bookId, newQuantity).subscribe(result => {\n      console.log(result);\n      location.reload();\n      //this.router.navigate(['/home']);\n    })\n    \n  }\n\n  /*getDeletedItems(){\n    this.cartService.getDeletedItems().subscribe(result => {\n      for (let x in result) {\n        this.deletedItemsList.push(result[x])\n      }\n      console.log(this.deletedItemsList);\n    })\n  }*/ \n\n}\n","<div class=\"container\">\n    <div>\n        <ul>\n            <li *ngFor = \"let ditem of deletedItemsList\">\n                <mat-card>\n                    <mat-card-header>                  \n                      <mat-card-title> Book: {{ditem.title}} was deleted by the user</mat-card-title>\n                    </mat-card-header>\n                    <mat-card-actions>\n                        <button mat-button> Dismiss </button>\n                    </mat-card-actions>\n                  </mat-card>\n            </li>\n        </ul>    \n    </div>\n    \n    \n    <ul>\n        <li *ngFor = \"let item of cartList\" >\n            <mat-card *ngIf = \"!(item.book_id == null); else elseBlock\" class=\"example-card\">\n                <mat-card-header>\n                  <div mat-card-avatar class=\"example-header-image\"></div>\n                  <mat-card-title>{{item.book.title}}</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n\n                    <div class=\"form-group\">\n                        <label for=\"quantity\">Quantity</label>\n                        <input (change)=\"updateItem($event, item.id, item.book_id)\" type=\"number\" min=\"0\" max=\"999\" class=\"form-control\" id=\"quantity\" required\n                               [(ngModel)]=\"item.quantity\" name=\"quantity\">\n                      </div>\n                    <!-- <h3> Quantity: {{item.quantity}}</h3> -->\n                    <h3>Price: ${{item.book.price}}</h3>\n                    <h3> Cost: ${{item.cost}}</h3>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button (click) = \"removeItem(item.id)\" mat-button> Remove </button>\n                </mat-card-actions>\n              </mat-card>\n              <ng-template #elseBlock>\n                <mat-card>\n                    <mat-card-content>\n                        <p> </p>\n                    </mat-card-content>\n                </mat-card>\n              </ng-template>              \n        </li>\n    </ul>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from 'src/app/services/users.service'\n\n@Component({\n  selector: 'app-forgot-pwd',\n  templateUrl: './forgot-pwd.component.html',\n  styleUrls: ['./forgot-pwd.component.scss']\n})\nexport class ForgotPwdComponent implements OnInit {\n  email: string;\n  constructor(private userService: UsersService) { }\n\n  ngOnInit(): void {\n  }\n  ForgotPassword(){\n    if (this.email === '') {\n      alert('Please enter an email');\n      return;\n    }\n\n    this.userService.Forgot(this.email).subscribe(response=>{\n      console.log(response);\n      alert(\"Password reset mail sent\");\n    })\n\n\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"main\">\n        <span id=\"title\">\n            Forgot Password\n        </span>\n        <form>\n            <input name=\"email\" [(ngModel)]=\"email\" type=\"email\" required placeholder=\"Email Address\">\n            <div id=\"btndiv\">\n                <button (click)=\"ForgotPassword()\">SUBMIT</button>                \n            </div>            \n            <a [routerLink]=\"['/signin']\"><span id=\"back\">Back to login</span></a>\n        </form>\n    </div>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from 'src/app/services/users.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  firstname: string;\n  lastname:string;\n  email:string;\n  oldpassword: string;\n  newpassword: string;\n  renewpassword: string;\n\n  tempfname:string\n  templname:string\n\n  constructor(private userService: UsersService, private router: Router) { }\n\n  ngOnInit(): void {\n    var currentuser = localStorage.getItem(\"user\");\n    this.userService.GetUserInfo(currentuser).subscribe(response => {\n      console.log(response);\n      this.firstname = response[0].firstname;\n      this.lastname = response[0].lastname;\n      this.email = response[0].email;\n\n      // Set the text fields \n      this.tempfname = this.firstname\n      this.templname = this.lastname\n\n    });\n\n  }\n\n  UpdateUserInfo(){\n    if (this.tempfname === '') {\n      alert('please input firstname');\n      return;\n    } else if (this.templname === '') {\n      alert('please input lastname');\n      return;\n    }\n\n    this.userService.UpdateInfo(this.email, this.tempfname, this.templname).subscribe(result => {\n      console.log(result);\n    })\n\n  }\n\n  UpdatePassword(){\n    if (this.oldpassword === ''){\n      alert('please input the password');\n      return;\n    }\n    else if (this.newpassword === '') {\n      \n      alert('please input new password');\n      return;\n    }\n    var passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n    if(!this.newpassword.match(passw)) \n    { \n      alert('Weak password, try another...')\n      return true;\n    }\n\n    console.log(\"sending\", this.oldpassword, \"    -------    \", this.newpassword)\n\n    this.userService.UpdatePassword(this.email, this.oldpassword,this.newpassword).subscribe((res) =>{\n      \n      alert(res);\n    })\n\n\n  }\n\n  logout() {\n    \n    //this.shareInfoClass.logIn = false;\n    sessionStorage.removeItem('user');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    this.router.navigate(['/']);\n    //this.status = 'Login';\n\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\">\n  <mat-tab label=\"Books\"><app-all-books></app-all-books></mat-tab>\n  <mat-tab label=\"Add book\"><app-add-book></app-add-book></mat-tab>\n  <mat-tab label=\"Manage books\"><app-manage-books></app-manage-books></mat-tab>\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\nimport {BooksService} from '../services/books/books.service'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-manage-books',\n  templateUrl: './manage-books.component.html',\n  styleUrls: ['./manage-books.component.scss']\n})\nexport class ManageBooksComponent implements OnInit {\n\n  booksList = Array();\n  userId: string;\n  image:File; \n\n  constructor(private booksService:BooksService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem(\"userId\").toString();\n    //Retrieve a list of all the books \n    this.booksService.getBooks().subscribe(result => {\n      for (let x in result) {\n        var urls = result[x].images.split(';');\n        //urls.pop(); \n        result[x].imageArray = urls;\n        result[x].selectedIndex = 0;  \n        this.booksList.push(result[x])\n      }\n    })\n  }\n\n\n    // Method to create a new book\n    deleteBook(bookId: string){\n      var retVal = confirm(\"Are you sure you want to delete the book?\");\n      if( retVal == true ) {\n        this.booksService.deleteBook(bookId)\n        .subscribe(response => {\n          alert(\"Book deleted\");\n          console.log(\"response from deletion\", response);\n          this.router.navigate(['/books'])          \n        })   \n      }       \n    }\n\n    updateBook(bookId: string){\n      alert(`ID is ${bookId}`)\n    }\n\n    nextImage(id){\n      this.booksList.forEach(book => {\n        if(book.id == id) {\n          if(book.selectedIndex != book.imageArray.length-1)\n          {\n            book.selectedIndex = book.selectedIndex + 1;\n          }\n        }\n      })\n      \n    }\n  \n    prevImage(id){\n      this.booksList.forEach(book => {\n        if(book.id == id) {\n          if(book.selectedIndex != 0)\n          {\n            book.selectedIndex = book.selectedIndex - 1;\n          }\n        }\n      })\n      \n    }\n\n    deleteImage(id){\n      this.booksList.forEach(book => {\n        if(book.id == id) {\n          var imageUrl = book.imageArray[book.selectedIndex];\n          book.imageArray.splice(book.selectedIndex,1);\n          book.selectedIndex = 0;\n\n          var updatedImageString = book.imageArray.join(';')\n          this.booksService.updateBooksImages(id, updatedImageString, imageUrl).subscribe(result=>{\n\n          })\n\n        }\n      })\n    }\n\n    onFileSelect(event){\n      console.log(event.target.files);\n      if (event.target.files.length > 0) {\n        this.image = event.target.files[0];\n        console.log(this.image);\n        //this.uploadForm.get('profile').setValue(file);\n        \n      }\n    }\n\n    addImage(book){\n      if(this.image!=null || this.image!=undefined){\n        const formData = new FormData(); \n        formData.append(\"id\", book.id);\n        formData.append(\"images\", book.images);\n        formData.append(\"image\", this.image);\n\n\n    this.booksService.addImageToBook(formData)\n    .subscribe(response => {\n      alert(\"Book added\");\n      console.log(response);\n      this.router.navigate(['/books']);\n\n    })\n\n      }\n      else {\n        alert(\"No image selected\");\n      }\n    }\n}\n","<div class=\"container\">\n    <ul>\n            <li *ngFor = \"let book of booksList\">\n                <div *ngIf = \"book.user_id == userId\">\n                    <mat-card class=\"example-card\">\n                        <mat-card-header>\n                          <!--<div mat-card-avatar class=\"example-header-image\"></div> -->\n                          <mat-card-title>{{book.title}}</mat-card-title>\n                          <mat-card-subtitle>Author(s): {{book.authors}}</mat-card-subtitle>\n                        </mat-card-header>\n                        \n                        <mat-card-content>\n                          <div class=\"mySlides\">                            \n                            <img src=\"{{book.imageArray[book.selectedIndex]}}\" style=\"width:100%\">     \n                          </div>\n                          <div class=\"scrollPhotos\">\n                            <button (click)=\"prevImage(book.id)\">\n                              Previous\n                            </button>\n                            <button (click)=\"nextImage(book.id)\">\n                              Next\n                            </button>\n                          </div>\n                          <div>\n                            <button (click)=\"deleteImage(book.id)\"class=\"deleteBtn\">Delete image</button>                             \n                            <input type=\"file\"  accept=\"image/png, image/jpeg, image/jpg\" multiple=\"false\" name=\"profile\" (change)=\"onFileSelect($event)\" />\n                            <button (click)=\"addImage(book)\"class=\"btn btn-primary\">Add Image</button>            \n                          </div>                            \n                            <h3>ISBN: {{book.isbn}}</h3>\n                            <h3>Price: ${{book.price}}</h3>\n                            <h3>Quantity: {{book.quantity}}</h3>\n                            <h3>Publication Date: {{book.publication_date}}</h3>\n                            <!-- <h3>Created date: {{book.createdDate}}</h3>\n                            <h3>Updated date: {{book.updatedDate}}</h3>           -->\n                        </mat-card-content>\n                        <mat-card-actions>\n                          <a [routerLink]=\"['/books/update/',book.id]\">Update</a>\n                          <!-- <button></button> -->\n                          <!-- <button  (click) = \"updateBook(book.id)\" mat-button>Update</button> -->\n                          <button class=\"deleteBtn\" (click) = \"deleteBook(book.id)\" mat-raised-button color=\"warn\">Delete</button>\n                        </mat-card-actions>\n                      </mat-card>\n                </div>\n                \n            </li>\n    </ul>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {BooksService} from '../../services/books/books.service'\nimport {Books} from '../../models/books'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.scss']\n})\nexport class UpdateBookComponent implements OnInit {\n  \n  id: string\n  book : Books\n  isbn: string\n  title: string\n  authors: string\n  publication_date: string\n  price: number\n  quantity: number\n\n  constructor(private route: ActivatedRoute, private bookService: BooksService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params.bookId; \n    this.bookService.getSpecificBook(this.id).subscribe(result => {\n      console.log(\"received from back\", result);\n      this.book = result;\n      this.isbn = result.isbn\n      this.title = result.title\n      this.authors = result.authors\n      this.publication_date = \"123\"\n      this.price = result.price\n      this.quantity = result.quantity\n\n      console.log(\"Book object now is : \", this.book)\n    })\n  }\n\n  /*updateBook(){\n    this.bookService.updateBook(this.book.isbn, this.book.title, this.book.authors, this.book.price, this.book.quantity, this.id)\n      .subscribe(result => {\n        alert(\"Book updated\");\n        console.log(result);\n        this.router.navigate(['/books/manage']);\n      })\n  }*/ \n  \n  updateBook(){\n    this.bookService.updateBook(this.isbn, this.title, this.authors, this.price, this.quantity, this.id)\n      .subscribe(result => {\n        alert(\"Book updated\");\n        console.log(result);\n        this.router.navigate(['/books/manage']);\n      })\n\n  }\n\n}\n","<div class=\"container\">\n    <h3>Update book</h3>\n    <form (ngSubmit)=\"updateBook()\" #bookForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"isbn\">ISBN</label>\n            <input type=\"text\" class=\"form-control\" id=\"isbn\"\n                   required\n                   [(ngModel)]=\"isbn\" name=\"isbn\">\n          </div><br>\n          \n          <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <input type=\"text\"  class=\"form-control\" id=\"title\"\n                    required\n                   [(ngModel)]=\"title\" name=\"title\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"authors\">Authors</label>\n            <input type=\"text\"  class=\"form-control\" id=\"authors\"\n            required\n                   [(ngModel)]=\"authors\" name=\"authors\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"price\">Price</label>\n            <input type=\"number\" step=\"0.01\" min=\"0.01\" max=\"9999.99\"  class=\"form-control\" id=\"price\"\n            required\n                   [(ngModel)]=\"price\" name=\"price\">\n          </div><br>\n\n          <div class=\"form-group\">\n            <label for=\"quantity\">Quantity</label>\n            <input type=\"number\" min=\"0\" max=\"999\" class=\"form-control\" id=\"quantity\" required\n                   [(ngModel)]=\"quantity\" name=\"quantity\">\n          </div><br>\n\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!bookForm.form.valid\">Submit</button>\n          \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router} from'@angular/router';\nimport {ShareInfoService} from '../services/ShareInfoService'\nimport {ShareInfoClass} from '../models/ShareInfoClass'\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  loggedIn: boolean\n  constructor(private router:Router, private shareInfoService: ShareInfoService) {\n    if (sessionStorage.getItem('user') === null) {\n      this.loggedIn = false;\n    } else {\n      this.loggedIn = true; \n    }\n   }\n\n  ngOnInit(): void {\n        // Get the username from shareinfoService\n        this.shareInfoService.change.subscribe(value => {\n\n          this.loggedIn = value.loggedIn;\n        });\n  }\n\n  logout() {\n    \n    //this.shareInfoClass.logIn = false;\n    sessionStorage.removeItem('user');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    this.loggedIn = false; \n    this.router.navigate(['/']);\n    //this.status = 'Login';\n\n  }\n\n}\n","<mat-toolbar color=\"accent\">\n\n\n        <button mat-fab color=\"accent\" aria-label=\"Example icon button with a home icon\">\n      <!--    <a [routerLink] = \"['/books']\"><mat-icon>home</mat-icon></a> -->\n        </button>\n    <span>Welcome to Bookstore...!!</span>\n    <span class=\"example-spacer\"></span>\n<div *ngIf = \"loggedIn\">\n  <button mat-raised-button color=\"accent\"  [matMenuTriggerFor]=\"belowMenu\">My Books</button>\n<mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n  <a [routerLink] = \"['/books/add']\"><button mat-menu-item>Add Book</button></a>\n  <a [routerLink] = \"['/books/manage']\"><button mat-menu-item> Manage Books </button></a>\n</mat-menu>\n    <!-- Buyer/Seller buttons -->\n\n    <a [routerLink] = \"['/books']\"><button class=\"btn\" mat-raised-button color=\"accent\"> All Books</button></a>\n    <a [routerLink] = \"['/account']\"><button class=\"btn\" mat-raised-button color=\"accent\">My Account</button></a>\n    <a [routerLink] = \"['/cart']\"><button class=\"btn\" mat-raised-button color=\"accent\">Cart</button></a>\n</div>\n    \n    <div *ngIf = \"!loggedIn\">\n      <a [routerLink] = \"['/signin']\"><button class=\"btn\" mat-raised-button color=\"accent\">Log in</button></a>\n    <a [routerLink] = \"['/signup']\"><button class=\"btn\" mat-raised-button color=\"accent\">Sign up</button></a>\n    </div>\n    <button *ngIf = \"loggedIn\" (click)=\"logout()\" class=\"btn\" mat-raised-button color=\"accent\">Log Out</button>\n    \n</mat-toolbar>\n","// Share Info Class which consist of Login , userName and user Account\nexport class ShareInfoClass{\n    loggedIn : Boolean = false;\n    userName : string;\n    userAccount: string;\n  }\n  ","import { ShareInfoClass } from '../models/ShareInfoClass';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n//  @Injectable() decorator marks it as a service that can be injected, but Angular can't actually inject it anywhere until you configure an Angular dependency injector with a provider of that service\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class ShareInfoService {\n  shareInfo: ShareInfoClass;\n//   logIn : Boolean = false;\n//   userName : string;\n  change : EventEmitter<any>;\n  constructor() {\n    this.change = new EventEmitter();\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BooksService {\n\n  //requestUrl:string='http://localhost:3301';\n  requestUrl:string = \"https://\" + window.location.hostname + \":3301\";\n  //requestUrl:string=process.env.BASE_URL;\n  constructor(private http:HttpClient) { }\n\n\n  addBook(formData: FormData):Observable<any>\n  {\n    const token = localStorage.getItem('token').toString();\n\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.post(this.requestUrl+'/books', formData, httpOptions);\n  }\n/*\n  addBook(isbn:string,title: string, authors:string, price:number, quantity:number):Observable<any>\n  {\n    const userId = localStorage.getItem('userId').toString();\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.post(this.requestUrl+'/books',{\n    isbn, title, authors, price, quantity, userId\n   },httpOptions);\n  }\n*/ \n\n  getBooks(): Observable<any>{\n    return this.http.get(this.requestUrl + '/books')\n  }\n\n  deleteBook(bookId: string) : Observable<any>{\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n    console.log(\"Book id is \", bookId);\n    return this.http.delete(this.requestUrl + '/books/' + bookId, httpOptions);\n  }\n\n  // Get a specific book's record\n  getSpecificBook(id:string) : Observable<any>{\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n    return this.http.get(this.requestUrl + '/books/'+ id, httpOptions);\n  }\n\n  // To update a book\n\n  updateBook(isbn:string,title: string, authors:string, price:number, quantity:number, id:string):Observable<any>\n  {\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.put(this.requestUrl+'/books',{\n    isbn, title, authors, price, quantity, bookId: id\n   },httpOptions);\n  }\n\n  updateBooksImages(id, updatedImageString, imageUrl):Observable<any>{\n        const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n    return this.http.put(this.requestUrl+'/images/update',{\n      id, updatedImageString, imageUrl\n     },httpOptions);\n  }\n\n\n  addImageToBook(formData: FormData):Observable<any>\n  {\n    const token = localStorage.getItem('token').toString();\n\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.post(this.requestUrl+'/images/update', formData, httpOptions);\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  requestUrl:string = \"https://\" + window.location.hostname + \":3301\";\n  //requestUrl:string='http://localhost:3301';\n\n  constructor(private http:HttpClient) { }\n\n\n  addToCart(bookId: string, quantity: number){\n    const userId = localStorage.getItem('userId').toString();\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.post(this.requestUrl+'/cart/'+ userId,{\n    bookId, quantity\n   },httpOptions);\n  }\n\n  getCart(){\n    const userId = localStorage.getItem('userId').toString();\n    return this.http.get(this.requestUrl+ \"/cart/\"+userId)   \n  }\n\n  deleteFromCart(itemId: string){\n    const userId = localStorage.getItem('userId').toString();\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      }),\n      body: {\n        id: itemId\n      }\n    };\n\n    return this .http.delete(this.requestUrl + \"/cart/\"+userId, httpOptions)\n\n  }\n\n  updateCart(itemId: string, bookId: string, newQuantity: number){\n    const userId = localStorage.getItem('userId').toString();\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n   return this.http.put(this.requestUrl+'/cart/'+ userId,{\n    bookId, newQuantity, id:itemId\n   },httpOptions);\n  }\n\n\n  getDeletedItems() {\n    const userId = localStorage.getItem('userId').toString();\n    return this.http.get(this.requestUrl+\"/bufferCart/\"+ userId);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// Stores User Login Account Details and setting up connection from backend\nexport class UsersService {\n\n  requestUrl:string = \"https://\" + window.location.hostname + \":3301\";\n  //requestUrl:string='http://localhost:3301';\n\n  constructor(private http:HttpClient){}\n\n\n  SignIn(email:string,password:string):Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(this.requestUrl+'/users/signin',{\n      email,\n      password\n    });\n  }\n\n\n  SignUp(email:string,firstname: string, lastname:string, password:string,):Observable<any>\n  {\n   const httpOptions = {\n     headers: new HttpHeaders({\n       'Content-Type':  'application/json',\n     })\n   };\n\n   const body = {\n    email,firstname,lastname,password  \n   }\n   \n   console.log(\"sending the request now with body \", body);\n   return this.http.post(this.requestUrl+'/users/signup',body,httpOptions);\n  }\n\n  GetUserInfo(email:string) : Observable<any>{\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n    return this.http.get(this.requestUrl + '/users/email/' + email, httpOptions);\n  }\n\n  UpdateInfo(email:string, firstname:string, lastname: string) {\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n    \n    \n    return this.http.put(this.requestUrl + '/users/settings/info', {\n      firstname,\n      lastname,\n      email\n    }, httpOptions);\n  }\n\n  UpdatePassword(email:string, oldpassword:string, newpassword: string) {\n    const token = localStorage.getItem('token').toString();\n    // Attach the JWT token to the request header\n    const bearer = 'Bearer ' + token;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': bearer\n      })\n    };\n\n    \n    \n    return this.http.put(this.requestUrl + '/users/settings/password', {\n      email,\n      oldpassword,\n      newpassword\n    }, httpOptions);\n  }\n\n//Forgot password method \nForgot(email:string):Observable<any>\n{\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n  return this.http.post(this.requestUrl+'/users/reset',{\n    email\n  });\n}\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from 'src/app/services/users.service'\nimport { Router } from '@angular/router';\nimport {ShareInfoClass} from '../models/ShareInfoClass'\nimport {ShareInfoService} from '../services/ShareInfoService'\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  email: string;\n  password: string; \n  shareInfoClass: ShareInfoClass = new ShareInfoClass;\n\n  constructor(private userService: UsersService, private router: Router, private shareInfoService: ShareInfoService) { }\n\n  ngOnInit(): void {\n    // check if laready signed in \n    var email = localStorage.getItem(\"user\");\n    if (email){\n      this.router.navigate(['/books']);\n    }\n  }\n\n  UserLogin(){\n    if (this.email === '') {\n      alert('please input email');\n      return;\n    } else if (this.password === '') {\n      alert('please input password');\n      return;\n    }\n    \n    this.userService.SignIn(this.email, this.password).subscribe(response => {\n\n        console.log(response);\n        if (response.result === 'Unauthorized') {\n          alert('Invalid password');\n        } else if (response !== null) {\n          //share username and log in status\n          // When running app.js use the below code\n\n          //when running server.js, uncomment the below line\n          //this.user = response.user;\n\n          console.log(this.email + \"logged in \");\n          console.log(response.result);\n          \n          this.shareInfoClass.loggedIn = true;\n          this.shareInfoService.change.emit(this.shareInfoClass);\n\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('userId', response.user.id)\n          //localStorage.setItem('userId', response.result[0].id)\n          localStorage.setItem('user',this.email);\n          sessionStorage.setItem('user', this.email);\n          \n\n          this.router.navigate(['/books']);\n          //this.Authentication = true;\n\n        } else {\n          alert('Invalid password');\n        }\n      }\n    );\n  }\n}\n","<!--login page-->\n<div class=\"background\">\n    <div class=\"container\">\n      <div class=\"row\">\n          \n          <div style=\"width: 30%; margin: 25px auto;\">\n              <form>\n                <h1 class=\"h1\">Log In</h1>\n                <!--  Div class for E-mail -->\n                  <div class=\"form-group\">\n                    <input [(ngModel)]=\"email\" class=\"form-control\" type=\"email\" required name=\"email\" placeholder=\"Enter E-mail\"\n                      required minlength=\"200\" maxlength=\"400\" />\n                  </div><br>\n    \n                  <!-- Div class for password -->\n                  <div class=\"form-group\">\n                    <input [(ngModel)]=\"password\" class=\"form-control\" maxlength=\"200\" type=\"password\" required name=\"password\" placeholder=\"Password\">\n                  </div><br>    \n                  <div class=\"forgotpwd\">\n                    <a [routerLink] = \"['/forgot']\">\n                      Forgot Password?\n                    </a>                    \n                  </div>\n                   <!-- Div class for Login Button -->\n              <div class=\"form-group loginBtnClass\">\n                <button class=\"loginButton\" (click)=\"UserLogin()\">Login</button>\n              </div>\n    \n                </form>\n          </div>\n         </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {UsersService} from 'src/app/services/users.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  email: string;\n  firstname: string;\n  lastname: string;\n  password: string;\n  rePassword: string; \n\n  pattern:any=/^[0-9A-Za-z]+(\\.[a-zA-Z0-9_-]+)*@[0-9A-Za-z_]+(\\.[a-zA-Z0-9_-]+)+$/g;\n\n  constructor(private router:Router, private userService:UsersService) { }\n\n  ngOnInit(): void {\n     // check if laready signed in \n     var email = localStorage.getItem(\"user\");\n     if (email){\n\n       this.router.navigate(['/home']);\n     }\n  }\n\n\n  register(){\n    var passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n\n    \n    if(this.email == null){\n      alert(\"Email not entered\");\n    }\n    else if(!this.email.match(this.pattern)){\n      alert(\"Please enter valid email id\");\n    }\n    else if(this.firstname == null){\n      alert(\"don't leave firstname  blank\");\n    }\n    else if(this.password != null && this.password == this.rePassword && this.rePassword!=null){\n\n      if(!this.password.match(passw)) \n    { \n      alert('Weak password, try another...')\n      return true;\n    }\n\n      console.log(\"passwords match\"); \n      // If the passwords match send a post request to the back end \n      this.userService.SignUp(this.email, this.firstname, this.lastname, this.password).subscribe((res)=>\n      {\n        console.log(\"Received from the back end \", res);\n        if(res.status == 400){\n          alert(\"Email already exists!\")\n        }\n        else {\n          alert(\"Account created. You can sign in now\");\n          this.router.navigate(['/signin']);\n        }\n      });\n      \n      \n    }\n    else{\n      alert(\"Invalid input\");\n    }\n  }\n\n}\n","<!--this page is for register-->\n<div class=\"background\">\n    <div class=\"container\">\n      <br>\n      <div class=\"row\">\n          <h1 style=\"text-align: center\">Sign Up</h1>\n          <div style=\"width: 30%; margin: 25px auto;\">\n              <form action=\"/signup\" method=\"post\">\n                <div class=\"form-group\">\n                    <input class=\"form-control\" name=\"email\" required name=\"account\" placeholder=\"Enter e-mail\"\n                    [(ngModel)]=\"email\">\n                </div><br>\n                <div class=\"form-group\">\n                    <input class=\"form-control\" type=\"text\" required name=\"userName\" placeholder=\"Firstname\"\n                    [(ngModel)]=\"firstname\">\n                </div><br>\n                \n                <div class=\"form-group\">\n                    <input class=\"form-control\" type=\"text\" required name=\"lastName\" placeholder=\"Lastname\"\n                    [(ngModel)]=\"lastname\">\n                </div><br>\n\n                <div class=\"form-group\">\n                    <input class=\"form-control\" type=\"password\" required name=\"password\" placeholder=\"Password\"\n                    [(ngModel)]=\"password\">\n                </div><br>\n\n                <div class=\"form-group\">\n                    <input class=\"form-control\" type=\"password\" required name=\"password\" placeholder=\"Confirm Password\"\n                    [(ngModel)]=\"rePassword\">\n                </div><br>\n               \n\n                <div class=\"form-group\">\n                      <button class=\"b\" (click) = \"register()\">Sign Up!</button>\n                </div><br>\n              </form>\n              \n          </div>\n      </div>\n    </div>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}