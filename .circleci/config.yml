version: 2
jobs:
  pr_check:
    docker:
      - image: circleci/node:10.19.0
    steps:
      - checkout
      - run:
          name: Install the dependencies 
          command: 'npm install'
      - run: 
          name: run the unit test
          command: 'npm test' 

  build:
    docker:
      - image: circleci/node:10.19.0
    steps:
      - checkout
      - run:
          name: Installing packages
          command: 'npm install'
      - run: 
          name: run the unit test
          command: 'npm test'
  
  deploy:
    docker:
      - image: circleci/node:10.19.0
    steps:
      - checkout        
      - run:
          name: Updating apt-get
          command: sudo apt-get update
      - run:
          name: Installing wget
          command: 'sudo apt-get install wget zip unzip'
      - run:
          name: Installing aws cli
          command: | 
            sudo apt-get install python-pip  
            sudo pip install awscli
      - run:
          name: Build Deployment Artifact
          command:  |
            mkdir -p codedeploy_artifact
            zip -r webapp.zip codedeploy/*.sh appspec.yml
            pwd
            ls -al
            mv webapp.zip codedeploy_artifact/
            ls -al
            pwd
            cd codedeploy_artifact
            ls -al
      - run: 
          name: Copy artifact to S3
          command: |
            aws s3 cp codedeploy_artifact/webapp.zip s3://${S3_BUCKET_NAME}/artifacts/webapp.zip
      - run: 
          name: CodeDeploy API call
          command: aws deploy create-deployment --application-name csye6225-webapp --deployment-group-name csye6225-webapp-deployment --s3-location bucket=${S3_BUCKET_NAME},bundleType=zip,key=artifacts/webapp.zip
        #  aws deploy create-deployment --application-name billmanagement-webapp --deployment-group-name billmanagement-webapp-deployment --s3-location bucket=${S3_BUCKET_ADDR},bundleType=zip,key=artifacts/webapp.zip --deployment-config-name CodeDeployDefault.AllAtOnce

workflows:
  version: 2
  pr-check:
    jobs:
    - pr_check
    
  build:

    jobs:
    - build:
        filters:
          branches:
            only: master
  deploy:
    jobs:
      - deploy
    # - deploy:
    #     filters:
    #       branches: